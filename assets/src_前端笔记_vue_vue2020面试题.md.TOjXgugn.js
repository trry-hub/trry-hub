import{_ as a,L as s,l as n,m as e,S as p,x as t,p as l,y as r,Q as i,z as o}from"./chunks/framework.B9qehBrd.js";const m=JSON.parse('{"title":"2020年，vue面试遇到的问题","description":"","frontmatter":{},"headers":[],"relativePath":"src/前端笔记/vue/vue2020面试题.md","filePath":"src/前端笔记/vue/vue2020面试题.md","lastUpdated":1683728600000}'),c={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"60.882ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 26910 950","aria-hidden":"true"},d={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"77.746ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 34363.8 950","aria-hidden":"true"},Q={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"13.156ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 5815 950","aria-hidden":"true"},u={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"62.857ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 27782.9 950","aria-hidden":"true"},b={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"51.323ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 22684.8 950","aria-hidden":"true"},T={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.439ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.983ex",height:"2.009ex",role:"img",focusable:"false",viewBox:"0 -694 4412.7 888","aria-hidden":"true"},h={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"88.824ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 39260 950","aria-hidden":"true"};const g=a({name:"src/前端笔记/vue/vue2020面试题.md"},[["render",function(a,m,g,f,v,x){const y=s("mjx-assistive-mml"),k=s("mjx-container");return e(),n("div",null,[m[33]||(m[33]=p('<p><img src="https://pic4.zhimg.com/v2-4f36221a8e3601ee61a32b2932556f9e_1440w.jpg?source=172ae18b" alt="2020年，vue面试遇到的问题"></p><h1 id="_2020年-vue面试遇到的问题" tabindex="-1">2020年，vue面试遇到的问题 <a class="header-anchor" href="#_2020年-vue面试遇到的问题" aria-label="Permalink to &quot;2020年，vue面试遇到的问题&quot;">​</a></h1><p><a href="https://www.zhihu.com/people/65hao" target="_blank" rel="noreferrer"><img src="https://pic2.zhimg.com/v2-a26e4918c2c3f057e11c485af2629033_xs.jpg?source=172ae18b" alt="东起"></a></p><p><a href="https://www.zhihu.com/people/65hao" target="_blank" rel="noreferrer">东起</a></p><p>前端程序猿</p><p>673 人赞同了该文章</p><h2 id="_1-页面中定义一个定时器-在哪个阶段清除" tabindex="-1"><strong>1.</strong> <strong>页面中定义一个定时器，在哪个阶段清除？</strong> <a class="header-anchor" href="#_1-页面中定义一个定时器-在哪个阶段清除" aria-label="Permalink to &quot;**1.** **页面中定义一个定时器，在哪个阶段清除？**&quot;">​</a></h2><p>答案：在 <strong>beforeDestroy</strong> 中销毁定时器。</p><p>①为什么销毁它：</p><p>在页面a中写了一个定时器，比如每隔一秒钟打印一次1，当我点击按钮进入页面b的时候，会发现定时器依然在执行，这是非常消耗性能的。</p><p>②解决方案1：</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mounted(){</span></span>\n<span class="line"><span> this.timer = setInterval(()=&gt;{</span></span>\n<span class="line"><span>    console.log(1)</span></span>\n<span class="line"><span> },1000)</span></span>\n<span class="line"><span>},</span></span>\n<span class="line"><span>beforeDestroy(){</span></span>\n<span class="line"><span> clearInterval(this.timer)</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>方案1有两点不好的地方，引用尤大的话来说就是：</p><p>它需要在这个组件实例中保存这个 timer，如果可以的话最好只有生命周期钩子可以访问到它。这并不算严重的问题，但是它可以被视为杂物。</p><p>我们的建立代码独立于我们的清理代码，这使得我们比较难于程序化的清理我们建立的所有东西。</p><p>方案2（<strong>推荐</strong>）：该方法是通过$once这个事件侦听器在定义完定时器之后的位置来清除定时器</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mounted(){</span></span>\n<span class="line"><span> const timer = setInterval(()=&gt;{</span></span>\n<span class="line"><span>    console.log(1)</span></span>\n<span class="line"><span> },1000)</span></span>\n<span class="line"><span> this.$once(&#39;hook:beforeDestroy&#39;,()=&gt;{</span></span>\n<span class="line"><span>  clearInterval(timer)</span></span>\n<span class="line"><span> })</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>官网参考链接:<a href="https://cn.vuejs.org/v2/guide/components-edge-cases.html" target="_blank" rel="noreferrer">https://cn.vuejs.org/v2/guide/components-edge-cases.html</a></p><p><img src="https://pic2.zhimg.com/80/v2-645c07156d898b930ee13a4831afe67d_720w.jpg" alt="img"></p><h3 id="_2-父组件如何获取子组件的数据-子组件如何获取父组件的数据-父子组件如何传值" tabindex="-1"><strong>2.</strong> <strong>父组件如何获取子组件的数据，子组件如何获取父组件的数据，父子组件如何传值？</strong> <a class="header-anchor" href="#_2-父组件如何获取子组件的数据-子组件如何获取父组件的数据-父子组件如何传值" aria-label="Permalink to &quot;**2.** **父组件如何获取子组件的数据，子组件如何获取父组件的数据，父子组件如何传值？**&quot;">​</a></h3><p>① 先说，父组件如何主动获取子组件的数据？</p><p>方案1：<strong>$children</strong></p><p>$children用来访问子组件实例，要知道一个组件的子组件可能是不唯一的，所以它的返回值是数组。</p><p>现在，我们定义Header，HelloWorld两个组件</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;template&gt;</span></span>\n<span class="line"><span>  &lt;div class=&quot;index&quot;&gt;</span></span>\n<span class="line"><span>    &lt;Header&gt;&lt;/Header&gt;</span></span>\n<span class="line"><span>    &lt;HelloWorld :message=&quot;message&quot;&gt;&lt;/HelloWorld&gt;</span></span>\n<span class="line"><span>    &lt;button @click=&quot;goPro&quot;&gt;跳转&lt;/button&gt;</span></span>\n<span class="line"><span>  &lt;/div&gt;</span></span>\n<span class="line"><span>&lt;/template&gt;</span></span>\n<span class="line"><span>mounted(){</span></span>\n<span class="line"><span> console.log(this.$children)</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><img src="https://pic3.zhimg.com/80/v2-3de1818f8ae08faad262f18ae30a8d16_720w.png" alt="img"></p><p>打印的是一个数组，可以用foreach分别得到所需要的的数据</p><p>缺点：</p><p>无法确定子组件的顺序，也不是响应式的。如果你确切的知道要访问子组件建议使用$refs。</p><p>方案2 ： <strong>$refs</strong></p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;HelloWorld ref=&quot;hello&quot; :message=&quot;message&quot;&gt;&lt;/HelloWorld&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>调用helloworld子组件的时候直接定义一个ref，这样就可以通过this.$refs获取所需要的的数据。</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>this.$refs.hello.属性</span></span>\n<span class="line"><span>this.$refs.hello.方法</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>②子组件如何主动获取父组件中的数据？</p><p>通过 ： <strong>$parent</strong></p>',35)),t("p",null,[l(k,{class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},{default:i(()=>[(e(),n("svg",c,[...m[0]||(m[0]=[t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mi"},[t("path",{"data-c":"1D45D",d:"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(503,0)"},[t("path",{"data-c":"1D44E",d:"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(1032,0)"},[t("path",{"data-c":"1D45F",d:"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(1483,0)"},[t("path",{"data-c":"1D452",d:"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(1949,0)"},[t("path",{"data-c":"1D45B",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(2549,0)"},[t("path",{"data-c":"1D461",d:"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(2910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"用")]),t("g",{"data-mml-node":"mi",transform:"translate(3910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"来")]),t("g",{"data-mml-node":"mi",transform:"translate(4910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"访")]),t("g",{"data-mml-node":"mi",transform:"translate(5910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"问")]),t("g",{"data-mml-node":"mi",transform:"translate(6910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"父")]),t("g",{"data-mml-node":"mi",transform:"translate(7910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"组")]),t("g",{"data-mml-node":"mi",transform:"translate(8910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"件")]),t("g",{"data-mml-node":"mi",transform:"translate(9910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"实")]),t("g",{"data-mml-node":"mi",transform:"translate(10910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"例")]),t("g",{"data-mml-node":"mi",transform:"translate(11910,0)"},[t("text",{"data-variant":"italic",transform:"scale(1,-1)","font-size":"884px","font-family":"serif","font-style":"italic"},"，")]),t("g",{"data-mml-node":"mi",transform:"translate(12910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"通")]),t("g",{"data-mml-node":"mi",transform:"translate(13910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"常")]),t("g",{"data-mml-node":"mi",transform:"translate(14910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"父")]),t("g",{"data-mml-node":"mi",transform:"translate(15910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"组")]),t("g",{"data-mml-node":"mi",transform:"translate(16910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"件")]),t("g",{"data-mml-node":"mi",transform:"translate(17910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"都")]),t("g",{"data-mml-node":"mi",transform:"translate(18910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"是")]),t("g",{"data-mml-node":"mi",transform:"translate(19910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"唯")]),t("g",{"data-mml-node":"mi",transform:"translate(20910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"一")]),t("g",{"data-mml-node":"mi",transform:"translate(21910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"确")]),t("g",{"data-mml-node":"mi",transform:"translate(22910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"定")]),t("g",{"data-mml-node":"mi",transform:"translate(23910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"的")]),t("g",{"data-mml-node":"mi",transform:"translate(24910,0)"},[t("text",{"data-variant":"italic",transform:"scale(1,-1)","font-size":"884px","font-family":"serif","font-style":"italic"},"，")]),t("g",{"data-mml-node":"mi",transform:"translate(25910,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"跟")])])],-1)])])),l(y,{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},{default:i(()=>[...m[1]||(m[1]=[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"p"),t("mi",null,"a"),t("mi",null,"r"),t("mi",null,"e"),t("mi",null,"n"),t("mi",null,"t"),t("mi",{mathvariant:"normal"},"用"),t("mi",{mathvariant:"normal"},"来"),t("mi",{mathvariant:"normal"},"访"),t("mi",{mathvariant:"normal"},"问"),t("mi",{mathvariant:"normal"},"父"),t("mi",{mathvariant:"normal"},"组"),t("mi",{mathvariant:"normal"},"件"),t("mi",{mathvariant:"normal"},"实"),t("mi",{mathvariant:"normal"},"例"),t("mi",null,"，"),t("mi",{mathvariant:"normal"},"通"),t("mi",{mathvariant:"normal"},"常"),t("mi",{mathvariant:"normal"},"父"),t("mi",{mathvariant:"normal"},"组"),t("mi",{mathvariant:"normal"},"件"),t("mi",{mathvariant:"normal"},"都"),t("mi",{mathvariant:"normal"},"是"),t("mi",{mathvariant:"normal"},"唯"),t("mi",{mathvariant:"normal"},"一"),t("mi",{mathvariant:"normal"},"确"),t("mi",{mathvariant:"normal"},"定"),t("mi",{mathvariant:"normal"},"的"),t("mi",null,"，"),t("mi",{mathvariant:"normal"},"跟")],-1)])]),_:1})]),_:1}),m[2]||(m[2]=r("children类似",-1))]),m[34]||(m[34]=p('<div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>this.$parent.属性</span></span>\n<span class="line"><span>this.$parent.方法</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',1)),t("p",null,[m[7]||(m[7]=r("父子组件通信除了以上三种，还有",-1)),t("strong",null,[m[5]||(m[5]=r("props 和",-1)),l(k,{class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},{default:i(()=>[(e(),n("svg",d,[...m[3]||(m[3]=[t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mi"},[t("path",{"data-c":"1D452",d:"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(466,0)"},[t("path",{"data-c":"1D45A",d:"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(1344,0)"},[t("path",{"data-c":"1D456",d:"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(1689,0)"},[t("path",{"data-c":"1D461",d:"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mo",transform:"translate(2272.2,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mo",transform:"translate(2994.4,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(3494.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"这")]),t("g",{"data-mml-node":"mi",transform:"translate(4494.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"两")]),t("g",{"data-mml-node":"mi",transform:"translate(5494.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"种")]),t("g",{"data-mml-node":"mi",transform:"translate(6494.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"比")]),t("g",{"data-mml-node":"mi",transform:"translate(7494.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"较")]),t("g",{"data-mml-node":"mi",transform:"translate(8494.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"常")]),t("g",{"data-mml-node":"mi",transform:"translate(9494.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"用")]),t("g",{"data-mml-node":"mi",transform:"translate(10494.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"就")]),t("g",{"data-mml-node":"mi",transform:"translate(11494.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"不")]),t("g",{"data-mml-node":"mi",transform:"translate(12494.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"介")]),t("g",{"data-mml-node":"mi",transform:"translate(13494.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"绍")]),t("g",{"data-mml-node":"mi",transform:"translate(14494.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"了")]),t("g",{"data-mml-node":"mi",transform:"translate(15494.4,0)"},[t("text",{"data-variant":"italic",transform:"scale(1,-1)","font-size":"884px","font-family":"serif","font-style":"italic"},"，")]),t("g",{"data-mml-node":"mi",transform:"translate(16494.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"除")]),t("g",{"data-mml-node":"mi",transform:"translate(17494.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"此")]),t("g",{"data-mml-node":"mi",transform:"translate(18494.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"之")]),t("g",{"data-mml-node":"mi",transform:"translate(19494.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"外")]),t("g",{"data-mml-node":"mi",transform:"translate(20494.4,0)"},[t("text",{"data-variant":"italic",transform:"scale(1,-1)","font-size":"884px","font-family":"serif","font-style":"italic"},"，")]),t("g",{"data-mml-node":"mi",transform:"translate(21494.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"还")]),t("g",{"data-mml-node":"mi",transform:"translate(22494.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"有")]),t("g",{"data-mml-node":"mo",transform:"translate(23716.7,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mo",transform:"translate(24438.9,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(24938.9,0)"},[t("path",{"data-c":"1D456",d:"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(25283.9,0)"},[t("path",{"data-c":"1D45B",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(25883.9,0)"},[t("path",{"data-c":"210E",d:"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(26459.9,0)"},[t("path",{"data-c":"1D452",d:"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(26925.9,0)"},[t("path",{"data-c":"1D45F",d:"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(27376.9,0)"},[t("path",{"data-c":"1D456",d:"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(27721.9,0)"},[t("path",{"data-c":"1D461",d:"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(28082.9,0)"},[t("path",{"data-c":"1D434",d:"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(28832.9,0)"},[t("path",{"data-c":"1D461",d:"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(29193.9,0)"},[t("path",{"data-c":"1D461",d:"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(29554.9,0)"},[t("path",{"data-c":"1D45F",d:"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(30005.9,0)"},[t("path",{"data-c":"1D460",d:"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mo",transform:"translate(30697.1,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mo",transform:"translate(31419.3,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(31919.3,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"和")]),t("g",{"data-mml-node":"mo",transform:"translate(33141.6,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mo",transform:"translate(33863.8,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})])])],-1)])])),l(y,{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},{default:i(()=>[...m[4]||(m[4]=[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"e"),t("mi",null,"m"),t("mi",null,"i"),t("mi",null,"t"),t("mo",null,"∗"),t("mo",null,"∗"),t("mi",{mathvariant:"normal"},"这"),t("mi",{mathvariant:"normal"},"两"),t("mi",{mathvariant:"normal"},"种"),t("mi",{mathvariant:"normal"},"比"),t("mi",{mathvariant:"normal"},"较"),t("mi",{mathvariant:"normal"},"常"),t("mi",{mathvariant:"normal"},"用"),t("mi",{mathvariant:"normal"},"就"),t("mi",{mathvariant:"normal"},"不"),t("mi",{mathvariant:"normal"},"介"),t("mi",{mathvariant:"normal"},"绍"),t("mi",{mathvariant:"normal"},"了"),t("mi",null,"，"),t("mi",{mathvariant:"normal"},"除"),t("mi",{mathvariant:"normal"},"此"),t("mi",{mathvariant:"normal"},"之"),t("mi",{mathvariant:"normal"},"外"),t("mi",null,"，"),t("mi",{mathvariant:"normal"},"还"),t("mi",{mathvariant:"normal"},"有"),t("mo",null,"∗"),t("mo",null,"∗"),t("mi",null,"i"),t("mi",null,"n"),t("mi",null,"h"),t("mi",null,"e"),t("mi",null,"r"),t("mi",null,"i"),t("mi",null,"t"),t("mi",null,"A"),t("mi",null,"t"),t("mi",null,"t"),t("mi",null,"r"),t("mi",null,"s"),t("mo",null,"∗"),t("mo",null,"∗"),t("mi",{mathvariant:"normal"},"和"),t("mo",null,"∗"),t("mo",null,"∗")],-1)])]),_:1})]),_:1}),m[6]||(m[6]=r("attrs",-1))])]),m[35]||(m[35]=p('<p><strong>③</strong> <strong>inheritAttrs</strong></p><p>这是@2.4新增的属性和接口。inheritAttrs属性控制子组件html属性上是否显示父组件的提供的属性。</p><p>如果我们将父组件Index中的属性desc、keysword、message三个数据传递到子组件HelloWorld中的话，如下</p><p>父组件Index部分</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;HelloWorld ref=&quot;hello&quot; :desc=&quot;desc&quot; :keysword=&quot;keysword&quot; :message=&quot;message&quot;&gt;&lt;/HelloWorld&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>子组件：HelloWorld，props中只接受了message</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>props: {</span></span>\n<span class="line"><span>    message: String</span></span>\n<span class="line"><span>},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>实际情况，我们只需要message，那其他两个属性则会被当做普通的html元素插在子组件的根元素上。</p><p>如图</p><p><img src="https://pic2.zhimg.com/80/v2-8688552a0ce86bd64f9528a0ad0be03d_720w.jpg" alt="img"></p><p>这样做会使组件预期功能变得模糊不清，这个时候，在子组件中写入，<strong>inheritAttrs：false</strong> ，这些没用到的属性便会被去掉，true的话，就会显示。</p><p>如果，父组件中没被需要的属性，跟子组件本来的属性冲突的时候，则依据父组件</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;HelloWorld ref=&quot;hello&quot; type=&quot;text&quot; :message=&quot;message&quot;&gt;&lt;/HelloWorld&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>子组件：HelloWorld</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;template&gt;</span></span>\n<span class="line"><span>  &lt;input type=&quot;number&quot;&gt;</span></span>\n<span class="line"><span>&lt;/template&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这个时候父组件中type=“text”，而子组件中type=”number”,而实际中最后显示的是type=”text”，这并不是我们想要的，所以只要设置：**inheritAttrs：false，**type便会成为number</p><p><img src="https://pic3.zhimg.com/80/v2-9494fc77b08175b372e23f985bbfda1a_720w.jpg" alt="img"></p><p>上述这些没被用到的属性，如何被获取呢？这就用到了**$attrs**</p><p><strong>③</strong> <strong>$attrs</strong></p><p>作用：可以获取到没有使用的注册属性，如果需要，我们在这也可以<strong>往下继续</strong>传递。</p><p>就上上述没有被用到的desc和keysword就能通过$attrs获取到。</p><p>通过$attrs的这个特性可以父组件传递到孙组件，免除父组件传递到子组件，再从子组件传递到孙组件的麻烦</p><p>代码如下 父组件Index部分</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;div class=&quot;index&quot;&gt;</span></span>\n<span class="line"><span>  &lt;HelloWorld ref=&quot;hello&quot; :desc=&quot;desc&quot; :keysword=&quot;keysword&quot; :message=&quot;message&quot;&gt;&lt;/HelloWorld&gt;</span></span>\n<span class="line"><span>&lt;/div&gt;</span></span>\n<span class="line"><span> data(){</span></span>\n<span class="line"><span>  return{</span></span>\n<span class="line"><span>   message:&#39;首页&#39;,</span></span>\n<span class="line"><span>   desc:&#39;首页描述&#39;,</span></span>\n<span class="line"><span>   keysword:&#39;我是关键词key&#39;</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span>},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>子组件HelloWorld部分</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;div class=&quot;hello&quot;&gt;</span></span>\n<span class="line"><span>   &lt;sunzi v-bind=&quot;$attrs&quot;&gt;&lt;/sunzi&gt;</span></span>\n<span class="line"><span>   &lt;button @click=&quot;aa&quot;&gt;获取父组件的数据&lt;/button&gt;</span></span>\n<span class="line"><span>&lt;/div&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>孙子组件sunzi部分</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;template&gt;</span></span>\n<span class="line"><span>  &lt;div class=&quot;header&quot;&gt;</span></span>\n<span class="line"><span>    {{$attrs}}</span></span>\n<span class="line"><span>    &lt;br&gt;</span></span>\n<span class="line"><span>  &lt;/div&gt;</span></span>\n<span class="line"><span>&lt;/template&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>可以看出通过 **v-bind=”$attrs”**将数据传到孙组件中</p><p>除了以上，<strong>provide / inject</strong> 也适用于 隔代组件通信，尤其是获取祖先组件的数据，非常方便。</p><p><img src="https://pic2.zhimg.com/80/v2-116c7482d2ae370de13da0fd2d5c0f91_720w.jpg" alt="img"></p><p>简单的说，当组件的引入层次过多，我们的子孙组件想要获取祖先组件的资源，那么怎么办呢，总不能一直取父级往上吧，而且这样代码结构容易混乱。这个就是<strong>provide / inject</strong>要干的事情。</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;template&gt;</span></span>\n<span class="line"><span>  &lt;div&gt;</span></span>\n<span class="line"><span>&lt;childOne&gt;&lt;/childOne&gt;</span></span>\n<span class="line"><span>  &lt;/div&gt;</span></span>\n<span class="line"><span>&lt;/template&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>&lt;script&gt;</span></span>\n<span class="line"><span>  import childOne from &#39;../components/test/ChildOne&#39;</span></span>\n<span class="line"><span>  export default {</span></span>\n<span class="line"><span>    name: &quot;Parent&quot;,</span></span>\n<span class="line"><span>    provide: {</span></span>\n<span class="line"><span>      for: &quot;demo&quot;</span></span>\n<span class="line"><span>    },</span></span>\n<span class="line"><span>    components:{</span></span>\n<span class="line"><span>      childOne</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>在这里我们在父组件中provide for这个变量，然后直接设置三个组件（childOne、childTwo 、childThird）并且一层层不断内嵌其中， 而在最深层的childThird组件中我们可以通过inject获取for这个变量</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;template&gt;</span></span>\n<span class="line"><span>  &lt;div&gt;</span></span>\n<span class="line"><span>    {{demo}}</span></span>\n<span class="line"><span>  &lt;/div&gt;</span></span>\n<span class="line"><span>&lt;/template&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>&lt;script&gt;</span></span>\n<span class="line"><span>  export default {</span></span>\n<span class="line"><span>    name: &quot;&quot;,</span></span>\n<span class="line"><span>    inject: [&#39;for&#39;],</span></span>\n<span class="line"><span>    data() {</span></span>\n<span class="line"><span>      return {</span></span>\n<span class="line"><span>        demo: this.for</span></span>\n<span class="line"><span>      }</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="_3-自定义指令如何定义-它的生命周期是什么" tabindex="-1"><strong>3.</strong> <strong>自定义指令如何定义，它的生命周期是什么？</strong> <a class="header-anchor" href="#_3-自定义指令如何定义-它的生命周期是什么" aria-label="Permalink to &quot;**3.** **自定义指令如何定义，它的生命周期是什么？**&quot;">​</a></h3><p>通过Vue.<strong>directive</strong>() 来定义全局指令</p><p>有几个可用的钩子（生命周期）, 每个钩子可以选择一些参数. 钩子如下:</p><p><strong>bind</strong>: 一旦指令附加到元素时触发</p><p><strong>inserted</strong>: 一旦元素被添加到父元素时触发</p><p><strong>update</strong>: 每当元素本身更新(但是子元素还未更新)时触发</p><p><strong>componentUpdate</strong>: 每当组件和子组件被更新时触发</p><p><strong>unbind</strong>: 一旦指令被移除时触发。</p><p>bind和update也许是这五个里面最有用的两个钩子了</p><p>每个钩子都有el, binding, 和vnode参数可用.</p><p>update和componentUpdated钩子还暴露了oldVnode, 以区分传递的旧值和较新的值.</p><p>el就是所绑定的元素.</p><p>binding是一个保护传入钩子的参数的对象. 有很多可用的参数, 包括name, value, oldValue, expression, arguments, arg及修饰语.</p><p>vnode有一个更不寻常的用例, 它可用于你需要直接引用到虚拟DOM中的节点.</p><p>binding和vnode都应该被视为只读.</p><p>现在，自定义一个指令，添加一些样式，表示定位的距离</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Vue.directive(&#39;tack&#39;,{</span></span>\n<span class="line"><span> bind(el,binding){</span></span>\n<span class="line"><span>  el.style.position=&#39;fixed&#39;;</span></span>\n<span class="line"><span>  el.style.top=binding.value + &#39;px&#39;</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span>})</span></span>\n<span class="line"><span>&lt;div class=&quot;header&quot; v-tack=&quot;10&quot; &gt;我是header&lt;/div&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>假设我们想要区分从顶部或者左侧偏移70px, 我们可以通过传递一个<strong>参数</strong>来做到这一点</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Vue.directive(&#39;tack&#39;, {</span></span>\n<span class="line"><span> bind(el, binding, vnode) {</span></span>\n<span class="line"><span>  el.style.position = &#39;fixed&#39;;</span></span>\n<span class="line"><span>  const s = (binding.arg === &#39;left&#39; ? &#39;left&#39; : &#39;top&#39;);</span></span>\n<span class="line"><span>  el.style[s] = binding.value + &#39;px&#39;;</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span>})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>也可以同时传入不止一个值</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Vue.directive(&#39;tack&#39;, {</span></span>\n<span class="line"><span> bind(el, binding, vnode) {</span></span>\n<span class="line"><span> el.style.position = &#39;fixed&#39;;</span></span>\n<span class="line"><span> el.style.top = binding.value.top + &#39;px&#39;;</span></span>\n<span class="line"><span> el.style.left = binding.value.left + &#39;px&#39;;</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span>})</span></span>\n<span class="line"><span>&lt;div class=&quot;header&quot; v-tack=&quot;{left:’20’,top:’20’}&quot; &gt;我是header&lt;/div&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_4、vue生命周期-各个阶段简单讲一下" tabindex="-1"><strong>4、vue生命周期，各个阶段简单讲一下？</strong> <a class="header-anchor" href="#_4、vue生命周期-各个阶段简单讲一下" aria-label="Permalink to &quot;**4、vue生命周期，各个阶段简单讲一下？**&quot;">​</a></h2><p><strong>breforeCreate（）：实例创建前</strong>，这个阶段实例的data和methods是<strong>读不到</strong>的。</p><p><strong>created（）：实例创建后</strong>，这个阶段已经完成数据观测，<strong>属性</strong>和<strong>方法</strong>的运算，<strong>watch</strong>/event事件回调，mount挂载阶段<strong>还没有开始</strong>。$el属性目前不可见，数据并没有在DOM元素上进行渲染。</p><p><strong>created</strong>完成之后，进行template编译等操作，将template编译为render函数，有了render函数后才会执行beforeMount（）</p><p><strong>beforeMount（）：在挂载开始之前</strong>被调用：相关的 render 函数首次被调用</p><p><strong>mounted（）：挂载之后调用</strong>，el选项的DOM节点被新创建的 vm.$el 替换，并挂载到实例上去之后调用此生命周期函数，此时实例的数据在DOM节点上进行渲染</p><p>后续的钩子函数执行的过程都是需要外部的触发才会执行</p><p>有数据的变化，会调用<strong>beforeUpdate</strong>，然后经过Virtual Dom，最后<strong>updated</strong>更新完毕，当组件被销毁的时候，会调用<strong>beforeDestory</strong>，以及<strong>destoryed</strong>。</p><h2 id="_5、watch-和-computed的区别" tabindex="-1"><strong>5、watch 和 computed的区别？</strong> <a class="header-anchor" href="#_5、watch-和-computed的区别" aria-label="Permalink to &quot;**5、watch 和 computed的区别？**&quot;">​</a></h2><p>computed：</p><p>①有<strong>缓存</strong>机制；②不能接受参数；③可以依赖其他computed，甚至是其他组件的data；④不能与data中的属性重复</p><p>watch：</p><p>①可接受两个参数；②监听时可触发一个<strong>回调</strong>，并做一些事情；③监听的属性必须是存在的；④允许<strong>异步</strong></p><p>watch配置：handler、deep（是否深度）、immeditate （是否立即执行）</p><p>总结：</p><p>当有一些数据需要随着另外一些数据变化时，建议使用computed</p><p>当有一个通用的响应数据变化的时候，要执行一些业务逻辑或异步操作的时候建议使用watch</p><h2 id="_6、请说一下computed中的getter和setter" tabindex="-1"><strong>6、请说一下computed中的getter和setter</strong> <a class="header-anchor" href="#_6、请说一下computed中的getter和setter" aria-label="Permalink to &quot;**6、请说一下computed中的getter和setter**&quot;">​</a></h2><p>① computed 中可以分成 getter（读取） 和 setter（设值）</p><p>② 一般情况下是没有 setter 的，computed 预设只有 getter ，也就是只能读取，不能改变设值。</p><p>一、默认只有 getter的写法</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;div id=&quot;demo&quot;&gt;{{ fullName }}&lt;/div&gt;</span></span>\n<span class="line"><span>var vm = new Vue({</span></span>\n<span class="line"><span>  el: &#39;#demo&#39;,</span></span>\n<span class="line"><span>  data: {</span></span>\n<span class="line"><span>    firstName: &#39;Foo&#39;,</span></span>\n<span class="line"><span>    lastName: &#39;Bar&#39;</span></span>\n<span class="line"><span>  },</span></span>\n<span class="line"><span>  computed: {</span></span>\n<span class="line"><span>    fullName: function () {</span></span>\n<span class="line"><span>      return this.firstName + &#39; &#39; + this.lastName</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span>})</span></span>\n<span class="line"><span>//其实fullName的完整写法应该是如下：</span></span>\n<span class="line"><span>fullName: {</span></span>\n<span class="line"><span> get(){</span></span>\n<span class="line"><span>   return this.firstName + &#39; &#39; + this.lastName</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>',78)),t("p",null,[m[8]||(m[8]=r("注意：",-1)),m[9]||(m[9]=t("strong",null,"不是说我们更改了getter里使用的变量，就会触发computed的更新，前提是computed里的值必须要在模板里使用才行",-1)),r("。如果将"+o(a.fullName)+"去掉，get（）方法是不会触发的。",1)]),m[36]||(m[36]=p('<p>二、setter的写法，可以设值</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;template&gt;</span></span>\n<span class="line"><span>   &lt;div id=&quot;demo&quot;&gt;</span></span>\n<span class="line"><span>       &lt;p&gt; {{ fullName }} &lt;/p&gt;</span></span>\n<span class="line"><span>       &lt;input type=&quot;text&quot; v-model=&quot;fullName&quot;&gt;</span></span>\n<span class="line"><span>       &lt;input type=&quot;text&quot; v-model=&quot;firstName&quot;&gt;</span></span>\n<span class="line"><span>       &lt;input type=&quot;text&quot; v-model=&quot;lastName&quot;&gt;</span></span>\n<span class="line"><span>   &lt;/div&gt;</span></span>\n<span class="line"><span>&lt;/template&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>var vm = new Vue({</span></span>\n<span class="line"><span>  el: &#39;#demo&#39;,</span></span>\n<span class="line"><span>  data: {</span></span>\n<span class="line"><span>    firstName: &#39;zhang&#39;,</span></span>\n<span class="line"><span>    lastName: &#39;san&#39;</span></span>\n<span class="line"><span>  },</span></span>\n<span class="line"><span>  computed: {</span></span>\n<span class="line"><span>    fullName: {</span></span>\n<span class="line"><span>      //getter 方法</span></span>\n<span class="line"><span>     get(){</span></span>\n<span class="line"><span>       console.log(&#39;computed getter...&#39;)</span></span>\n<span class="line"><span>        return this.firstName + &#39; &#39; + this.lastName</span></span>\n<span class="line"><span>       }，</span></span>\n<span class="line"><span>   //setter 方法</span></span>\n<span class="line"><span>    set(newValue){</span></span>\n<span class="line"><span>      console.log(&#39;computed setter...&#39;)</span></span>\n<span class="line"><span>      var names = newValue.split(&#39; &#39;)</span></span>\n<span class="line"><span>      this.firstName = names[0]</span></span>\n<span class="line"><span>      this.lastName = names[names.length - 1]</span></span>\n<span class="line"><span>      return this.firstName + &#39; &#39; + this.lastName</span></span>\n<span class="line"><span>     }</span></span>\n<span class="line"><span>      </span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span>})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>在这里，我们修改fullName的值，就会触发setter，同时也会触发getter。</p><p>注意：<strong>并不是触发了setter也就会触发getter，他们两个是相互独立的。我们这里修改了fullName会触发getter是因为setter函数里有改变firstName 和 lastName 值的代码，这两个值改变了，fullName依赖于这两个值，所以便会自动改变。</strong></p><h2 id="_7、导航钩子有哪几种-分别如何用-如何将数据传入下一个点击的路由页面" tabindex="-1"><strong>7、导航钩子有哪几种，分别如何用，</strong> <strong>如何将数据传入下一个点击的路由页面？</strong> <a class="header-anchor" href="#_7、导航钩子有哪几种-分别如何用-如何将数据传入下一个点击的路由页面" aria-label="Permalink to &quot;**7、导航钩子有哪几种，分别如何用，** **如何将数据传入下一个点击的路由页面？**&quot;">​</a></h2><p>① 全局导航守卫</p><p>前置守卫</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>router.beforeEach((to, from, next) =&gt; {</span></span>\n<span class="line"><span>  // do someting</span></span>\n<span class="line"><span>});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>后置钩子（没有next参数）</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>router.afterEach((to, from) =&gt; {</span></span>\n<span class="line"><span>  // do someting</span></span>\n<span class="line"><span>});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>②路由独享守卫</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cont router = new  VueRouter({</span></span>\n<span class="line"><span> routes: [</span></span>\n<span class="line"><span>  {</span></span>\n<span class="line"><span>    path: &#39;/file&#39;,</span></span>\n<span class="line"><span>    component: File,</span></span>\n<span class="line"><span>    beforeEnter: (to, from ,next) =&gt; {</span></span>\n<span class="line"><span>       // do someting</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>   }</span></span>\n<span class="line"><span> ]</span></span>\n<span class="line"><span>});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>顺便看一下路由里面的参数配置：</p><p><img src="https://pic4.zhimg.com/80/v2-a8a592c0a3e41ad1d8d3a9a74b8a834b_720w.jpg" alt="img"></p><p>③ 组件内的导航钩子</p><p>组件内的导航钩子主要有这三种：beforeRouteEnter、beforeRouteUpdate、beforeRouteLeave。他们是直接在路由组件内部直接进行定义的</p><p><strong>beforeRouteEnter</strong></p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>data(){</span></span>\n<span class="line"><span> return{</span></span>\n<span class="line"><span>   pro:&#39;产品&#39;</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span>},</span></span>\n<span class="line"><span>beforeRouteEnter:(to,from,next)=&gt;{</span></span>\n<span class="line"><span>  console.log(to)</span></span>\n<span class="line"><span>  next(vm =&gt; {</span></span>\n<span class="line"><span>   console.log(vm.pro)</span></span>\n<span class="line"><span>  })</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>注：beforeRouteEnter 不能获取组件实例 this，因为当守卫执行前，组件实例被没有被创建出来，我们可以通过给 next 传入一个<strong>回调</strong>来访问组件实例。在导航被确认时，会执行这个回调，这时就可以访问组件实例了</p><p>仅仅是 beforRouteEnter 支持给 next 传递回调，其他两个并不支持，因为剩下两个钩子可以正常获取组件实例 this</p><p><strong>如何通过路由将数据传入下一个跳转的页面呢？</strong></p><p>答： params 和 query</p><p>params</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>传参</span></span>\n<span class="line"><span>this.$router.push({</span></span>\n<span class="line"><span> name:&quot;detail&quot;,</span></span>\n<span class="line"><span> params:{</span></span>\n<span class="line"><span>   name:&#39;xiaoming&#39;,</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span>});</span></span>\n<span class="line"><span>接受</span></span>\n<span class="line"><span>this.$route.params.name</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>query</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>传参</span></span>\n<span class="line"><span>this.$router.push({</span></span>\n<span class="line"><span>  path:&#39;/detail&#39;,</span></span>\n<span class="line"><span>  query:{</span></span>\n<span class="line"><span>    name:&quot;xiaoming&quot;</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span> })</span></span>\n<span class="line"><span>接受 //接收参数是this.$route</span></span>\n<span class="line"><span>this.$route.query.id</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>那query和params什么区别呢？</strong></p><p>① params只能用<strong>name</strong>来引入路由，query既可以用name又可以用path（通常用path）</p><p>② params类似于post方法，参数不会再地址栏中显示</p><p><img src="https://pic1.zhimg.com/80/v2-32a56c3878480d3ea03921d05051655c_720w.png" alt="img"></p><p>query类似于get请求，页面跳转的时候，可以在地址栏看到请求参数</p><p><img src="https://pic2.zhimg.com/80/v2-f2af54680c0cb540daf05104b926de41_720w.png" alt="img"></p>',32)),t("p",null,[t("strong",null,[m[12]||(m[12]=r("那刚才提到的this.",-1)),l(k,{class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},{default:i(()=>[(e(),n("svg",Q,[...m[10]||(m[10]=[t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mi"},[t("path",{"data-c":"1D45F",d:"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(451,0)"},[t("path",{"data-c":"1D45C",d:"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(936,0)"},[t("path",{"data-c":"1D462",d:"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(1508,0)"},[t("path",{"data-c":"1D461",d:"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(1869,0)"},[t("path",{"data-c":"1D452",d:"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(2335,0)"},[t("path",{"data-c":"1D45F",d:"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(2786,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"和")]),t("g",{"data-mml-node":"mi",transform:"translate(3786,0)"},[t("path",{"data-c":"1D461",d:"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(4147,0)"},[t("path",{"data-c":"210E",d:"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(4723,0)"},[t("path",{"data-c":"1D456",d:"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(5068,0)"},[t("path",{"data-c":"1D460",d:"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mo",transform:"translate(5537,0)"},[t("path",{"data-c":"2E",d:"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z",style:{"stroke-width":"3"}})])])],-1)])])),l(y,{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},{default:i(()=>[...m[11]||(m[11]=[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"r"),t("mi",null,"o"),t("mi",null,"u"),t("mi",null,"t"),t("mi",null,"e"),t("mi",null,"r"),t("mi",{mathvariant:"normal"},"和"),t("mi",null,"t"),t("mi",null,"h"),t("mi",null,"i"),t("mi",null,"s"),t("mo",null,".")],-1)])]),_:1})]),_:1}),m[13]||(m[13]=r("route有何区别？",-1))])]),m[37]||(m[37]=t("p",null,"先打印出来看一下",-1)),m[38]||(m[38]=t("p",null,[t("img",{src:"https://pic2.zhimg.com/80/v2-89ad72c1d6e1e37069bb61b56f395b45_720w.jpg",alt:"img"})],-1)),t("p",null,[l(k,{class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},{default:i(()=>[(e(),n("svg",u,[...m[14]||(m[14]=[t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mi"},[t("path",{"data-c":"1D45F",d:"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(451,0)"},[t("path",{"data-c":"1D45C",d:"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(936,0)"},[t("path",{"data-c":"1D462",d:"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(1508,0)"},[t("path",{"data-c":"1D461",d:"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(1869,0)"},[t("path",{"data-c":"1D452",d:"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(2335,0)"},[t("path",{"data-c":"1D45F",d:"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(2786,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"为")]),t("g",{"data-mml-node":"mi",transform:"translate(3786,0)"},[t("path",{"data-c":"1D449",d:"M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(4555,0)"},[t("path",{"data-c":"1D462",d:"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(5127,0)"},[t("path",{"data-c":"1D452",d:"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(5593,0)"},[t("path",{"data-c":"1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(6352,0)"},[t("path",{"data-c":"1D45C",d:"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(6837,0)"},[t("path",{"data-c":"1D462",d:"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(7409,0)"},[t("path",{"data-c":"1D461",d:"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(7770,0)"},[t("path",{"data-c":"1D452",d:"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(8236,0)"},[t("path",{"data-c":"1D45F",d:"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mo",transform:"translate(8909.2,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mo",transform:"translate(9631.4,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(10131.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"实")]),t("g",{"data-mml-node":"mi",transform:"translate(11131.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"例")]),t("g",{"data-mml-node":"mo",transform:"translate(12353.7,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mo",transform:"translate(13075.9,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(13575.9,0)"},[t("text",{"data-variant":"italic",transform:"scale(1,-1)","font-size":"884px","font-family":"serif","font-style":"italic"},"，")]),t("g",{"data-mml-node":"mi",transform:"translate(14575.9,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"想")]),t("g",{"data-mml-node":"mi",transform:"translate(15575.9,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"要")]),t("g",{"data-mml-node":"mi",transform:"translate(16575.9,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"导")]),t("g",{"data-mml-node":"mi",transform:"translate(17575.9,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"航")]),t("g",{"data-mml-node":"mi",transform:"translate(18575.9,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"到")]),t("g",{"data-mml-node":"mi",transform:"translate(19575.9,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"不")]),t("g",{"data-mml-node":"mi",transform:"translate(20575.9,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"同")]),t("g",{"data-mml-node":"mi",transform:"translate(21575.9,0)"},[t("path",{"data-c":"1D448",d:"M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(22342.9,0)"},[t("path",{"data-c":"1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(23101.9,0)"},[t("path",{"data-c":"1D43F",d:"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(23782.9,0)"},[t("text",{"data-variant":"italic",transform:"scale(1,-1)","font-size":"884px","font-family":"serif","font-style":"italic"},"，")]),t("g",{"data-mml-node":"mi",transform:"translate(24782.9,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"则")]),t("g",{"data-mml-node":"mi",transform:"translate(25782.9,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"使")]),t("g",{"data-mml-node":"mi",transform:"translate(26782.9,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"用")])])],-1)])])),l(y,{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},{default:i(()=>[...m[15]||(m[15]=[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"r"),t("mi",null,"o"),t("mi",null,"u"),t("mi",null,"t"),t("mi",null,"e"),t("mi",null,"r"),t("mi",{mathvariant:"normal"},"为"),t("mi",null,"V"),t("mi",null,"u"),t("mi",null,"e"),t("mi",null,"R"),t("mi",null,"o"),t("mi",null,"u"),t("mi",null,"t"),t("mi",null,"e"),t("mi",null,"r"),t("mo",null,"∗"),t("mo",null,"∗"),t("mi",{mathvariant:"normal"},"实"),t("mi",{mathvariant:"normal"},"例"),t("mo",null,"∗"),t("mo",null,"∗"),t("mi",null,"，"),t("mi",{mathvariant:"normal"},"想"),t("mi",{mathvariant:"normal"},"要"),t("mi",{mathvariant:"normal"},"导"),t("mi",{mathvariant:"normal"},"航"),t("mi",{mathvariant:"normal"},"到"),t("mi",{mathvariant:"normal"},"不"),t("mi",{mathvariant:"normal"},"同"),t("mi",null,"U"),t("mi",null,"R"),t("mi",null,"L"),t("mi",null,"，"),t("mi",{mathvariant:"normal"},"则"),t("mi",{mathvariant:"normal"},"使"),t("mi",{mathvariant:"normal"},"用")],-1)])]),_:1})]),_:1}),m[16]||(m[16]=r("router.push方法",-1))]),m[39]||(m[39]=p('<p>$route为当前router跳转对象，里面可以获取name、path、query、params等</p><h2 id="_8、es6-的特有的类型-常用的操作数组的方法都有哪些" tabindex="-1"><strong>8、es6 的特有的类型， 常用的操作数组的方法都有哪些？</strong> <a class="header-anchor" href="#_8、es6-的特有的类型-常用的操作数组的方法都有哪些" aria-label="Permalink to &quot;**8、es6 的特有的类型， 常用的操作数组的方法都有哪些？**&quot;">​</a></h2><p>es6新增的主要的特性：</p><p>① let const 两者都有块级作用域</p><p>② 箭头函数</p><p>③ 模板字符串</p><p>④ 解构赋值</p><p>⑤ for of循环</p><p>⑥ import 、export 导入导出</p><p>⑦ set数据结构</p><p>⑧ ...展开运算符</p><p>⑨ 修饰器 @</p><p>⑩ class类继承</p><p>⑪ async、await</p><p>⑫ promise</p><p>⑬ Symbol</p><p>⑭ Proxy代理</p><p>操作数组常用的方法：</p><p>es5：concat 、join 、push、pop、shift、unshift、slice、splice、substring和substr 、sort、 reverse、indexOf和lastIndexOf 、every、some、filter、map、forEach、reduce</p><p>es6：find、findIndex、fill、copyWithin、Array.from、Array.of、entries、values、key、includes</p><h2 id="_9、vue双向绑定原理" tabindex="-1"><strong>9、vue双向绑定原理？</strong> <a class="header-anchor" href="#_9、vue双向绑定原理" aria-label="Permalink to &quot;**9、vue双向绑定原理？**&quot;">​</a></h2><p>通过**Object.defineProperty()**来劫持各个属性的setter,getter，在数据变动时发布消息给订阅者，触发相应的监听回调</p><h2 id="_10、vue-router的实现原理-history和hash模式有什么区别" tabindex="-1"><strong>10、vue-router的实现原理，history和hash模式有什么区别？</strong> <a class="header-anchor" href="#_10、vue-router的实现原理-history和hash模式有什么区别" aria-label="Permalink to &quot;**10、vue-router的实现原理，history和hash模式有什么区别？**&quot;">​</a></h2><p>vue-router有两种模式，hash模式和history模式</p><p><strong>hash模式</strong></p><p>url中带有#的便是hash模式，#后面是hash值，它的变化会触发<strong>hashchange</strong> 这个事件。</p><p>通过这个事件我们就可以知道 hash 值发生了哪些变化。然后我们便可以监听hashchange来实现更新页面部分内容的操作：</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>window.onhashchange = function(event){</span></span>\n<span class="line"><span>  console.log(event.oldURL, event.newURL);</span></span>\n<span class="line"><span>  let hash = location.hash.slice(1);</span></span>\n<span class="line"><span>  document.body.style.color = hash;</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>另外，hash 值的变化，并不会导致浏览器向服务器发出请求，浏览器不发出请求，也就不会刷新页面。</p><p><strong>history模式</strong></p><p>history api可以分为两大部分，切换和修改</p><p>① 切换历史状态</p><p>包括back,forward,go三个方法，对应浏览器的前进，后退，跳转操作</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>history.go(-2);//后退两次</span></span>\n<span class="line"><span>history.go(2);//前进两次</span></span>\n<span class="line"><span>history.back(); //后退</span></span>\n<span class="line"><span>hsitory.forward(); //前进</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>② 修改历史状态</p><p>包括了<strong>pushState</strong>,<strong>replaceState</strong>两个方法,这两个方法接收三个参数:stateObj,title,url</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>history.pushState({color:&#39;red&#39;}, &#39;red&#39;, &#39;red&#39;})</span></span>\n<span class="line"><span>window.onpopstate = function(event){</span></span>\n<span class="line"><span>  console.log(event.state)</span></span>\n<span class="line"><span>  if(event.state &amp;&amp; event.state.color === &#39;red&#39;){</span></span>\n<span class="line"><span>    document.body.style.color = &#39;red&#39;;</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span>}</span></span>\n<span class="line"><span>history.back();</span></span>\n<span class="line"><span>history.forward();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>通过pushstate把页面的状态保存在state对象中，当页面的url再变回这个url时，可以通过event.state取到这个state对象，从而可以对页面状态进行还原，这里的页面状态就是页面字体颜色，其实滚动条的位置，阅读进度，组件的开关的这些页面状态都可以存储到state的里面。</p><p>history缺点：</p><p>1：hash 模式下，仅hash符号之前的内容会被包含在请求中，如<a href="http://www.a12c.com/" target="_blank" rel="noreferrer">http://www.a12c.com</a>,因此对于后端来说，即使没有做到对路由的全覆盖，也不会返回404错误。</p><p>2：history模式下，前端的URL必须和实际向后端发起请求的URL一致。如<a href="http://www.a12c.com/book/a%E3%80%82%E5%A6%82%E6%9E%9C%E5%90%8E%E7%AB%AF%E7%BC%BA%E5%B0%91%E5%AF%B9/book/a" target="_blank" rel="noreferrer">http://www.a12c.com/book/a。如果后端缺少对/book/a</a> 的路由处理，将返回404错误</p><h2 id="_11、怎么在vue中点击别的区域输入框不会失去焦点" tabindex="-1"><strong>11、怎么在vue中点击别的区域输入框不会失去焦点？</strong> <a class="header-anchor" href="#_11、怎么在vue中点击别的区域输入框不会失去焦点" aria-label="Permalink to &quot;**11、怎么在vue中点击别的区域输入框不会失去焦点？**&quot;">​</a></h2><p>答：阻止事件的默认行为</p><p>具体操作：监听你想点击后不会丢失 input 焦点的那个元素的 mousedown 事件，回调里面调用 event.preventDefault()，会阻止使当前焦点丢失这一默认行为。</p><h2 id="_12、vue中data的属性可以和methods中的方法同名吗-为什么" tabindex="-1"><strong>12、vue中data的属性可以和methods中的方法同名吗？为什么？</strong> <a class="header-anchor" href="#_12、vue中data的属性可以和methods中的方法同名吗-为什么" aria-label="Permalink to &quot;**12、vue中data的属性可以和methods中的方法同名吗？为什么？**&quot;">​</a></h2><p>答：不可以</p><p>因为，Vue会把methods和data的东西，全部代理到Vue生成的对象中，会产生覆盖所以最好不要同名</p><h2 id="_13、怎么给vue定义全局的方法" tabindex="-1"><strong>13、怎么给vue定义全局的方法？</strong> <a class="header-anchor" href="#_13、怎么给vue定义全局的方法" aria-label="Permalink to &quot;**13、怎么给vue定义全局的方法？**&quot;">​</a></h2><p>Vue.prototype.方法名称</p><h2 id="_14、vue-2-0-不再支持在-v-html-中使用过滤器怎么办" tabindex="-1"><strong>14、Vue 2.0 不再支持在 v-html 中使用过滤器怎么办？</strong> <a class="header-anchor" href="#_14、vue-2-0-不再支持在-v-html-中使用过滤器怎么办" aria-label="Permalink to &quot;**14、Vue 2.0 不再支持在 v-html 中使用过滤器怎么办？**&quot;">​</a></h2><p>解决方法：</p><p>①全局方法（推荐）</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Vue.prototype.msg = function（msg）{ </span></span>\n<span class="line"><span>  return msg.replace（&quot;\\n&quot;，&quot;&lt;br&gt;&quot;）</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span> &lt;div v-html=&quot;msg(content)&quot;&gt;&lt;/div&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>②computed方法</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>computed：{ </span></span>\n<span class="line"><span> content：function(msg){</span></span>\n<span class="line"><span>  return msg.replace(&quot;\\n&quot;，&quot;&lt;br&gt;&quot;)</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span>}</span></span>\n<span class="line"><span>&lt;div&gt;{{content}}&lt;/div&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>③$options.filters(推荐)</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>filters：{ </span></span>\n<span class="line"><span> msg：function(msg){</span></span>\n<span class="line"><span>  return msg.replace(/\\n/g，&quot;&lt;br&gt;&quot;)</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span>}，  　　</span></span>\n<span class="line"><span>data：{ </span></span>\n<span class="line"><span> content：&quot;XXXX&quot;</span></span>\n<span class="line"><span>}</span></span>\n<span class="line"><span>&lt;div v-html=&quot;$options.filters.msg(content)&quot;&gt;&lt;/div&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="_14、怎么解决vue打包后静态资源图片失效的问题" tabindex="-1"><strong>14、怎么解决vue打包后静态资源图片失效的问题？</strong> <a class="header-anchor" href="#_14、怎么解决vue打包后静态资源图片失效的问题" aria-label="Permalink to &quot;**14、怎么解决vue打包后静态资源图片失效的问题？**&quot;">​</a></h2><p>答：将静态资源的存放位置放在src目录下</p><h2 id="_16、怎么解决vue动态设置img的src不生效的问题" tabindex="-1"><strong>16、怎么解决vue动态设置img的src不生效的问题？</strong> <a class="header-anchor" href="#_16、怎么解决vue动态设置img的src不生效的问题" aria-label="Permalink to &quot;**16、怎么解决vue动态设置img的src不生效的问题？**&quot;">​</a></h2><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;img class=&quot;logo&quot; :src=&quot;logo&quot; alt=&quot;公司logo&quot;&gt;</span></span>\n<span class="line"><span>data() {</span></span>\n<span class="line"><span>  return {</span></span>\n<span class="line"><span>    logo:require(&quot;./../assets/images/logo.png&quot;),</span></span>\n<span class="line"><span>  };</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>因为动态添加src被当做静态资源处理了，没有进行编译，所以要加上require</p><h2 id="_17、跟keep-alive有关的生命周期是哪些-描述下这些生命周期" tabindex="-1"><strong>17、跟keep-alive有关的生命周期是哪些？描述下这些生命周期</strong> <a class="header-anchor" href="#_17、跟keep-alive有关的生命周期是哪些-描述下这些生命周期" aria-label="Permalink to &quot;**17、跟keep-alive有关的生命周期是哪些？描述下这些生命周期**&quot;">​</a></h2><p>activated和deactivated两个生命周期函数</p><p>1.activated：当组件激活时，钩子触发的顺序是created-&gt;mounted-&gt;activated</p><p>2.deactivated: 组件停用时会触发deactivated，当再次前进或者后退的时候只触发activated</p><h2 id="_18、你知道vue中key的原理吗-说说你对它的理解" tabindex="-1"><strong>18、你知道vue中key的原理吗？说说你对它的理解</strong> <a class="header-anchor" href="#_18、你知道vue中key的原理吗-说说你对它的理解" aria-label="Permalink to &quot;**18、你知道vue中key的原理吗？说说你对它的理解**&quot;">​</a></h2><p>暂时没弄明白，等会儿写</p><h2 id="_19、vue中怎么重置data" tabindex="-1"><strong>19、vue中怎么重置data？</strong> <a class="header-anchor" href="#_19、vue中怎么重置data" aria-label="Permalink to &quot;**19、vue中怎么重置data？**&quot;">​</a></h2><p>答：Object.assign()</p><p>Object.assign（）方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象。它将返回目标对象。</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>var o1 = { a: 1 };</span></span>\n<span class="line"><span>var o2 = { b: 2 };</span></span>\n<span class="line"><span>var o3 = { c: 3 };</span></span>\n<span class="line"><span>var obj = Object.assign(o1, o2, o3);</span></span>\n<span class="line"><span>console.log(obj); // { a: 1, b: 2, c: 3 }</span></span>\n<span class="line"><span>console.log(o1); // { a: 1, b: 2, c: 3 }, 注意目标对象自身也会改变。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>注意</strong>，具有相同属性的对象，同名属性，后边的会覆盖前边的。</p><p>由于Object.assign()有上述特性，所以我们在Vue中可以这样使用：</p>',74)),t("p",null,[m[23]||(m[23]=r("Vue组件可能会有这样的需求：在某种情况下，需要重置Vue组件的data数据。此时，我们可以通过",-1)),t("strong",null,[m[19]||(m[19]=r("this.",-1)),l(k,{class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},{default:i(()=>[(e(),n("svg",b,[...m[17]||(m[17]=[t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mi"},[t("path",{"data-c":"1D451",d:"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(520,0)"},[t("path",{"data-c":"1D44E",d:"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(1049,0)"},[t("path",{"data-c":"1D461",d:"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(1410,0)"},[t("path",{"data-c":"1D44E",d:"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mo",transform:"translate(2161.2,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mo",transform:"translate(2883.4,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(3383.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"获")]),t("g",{"data-mml-node":"mi",transform:"translate(4383.4,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"取")]),t("g",{"data-mml-node":"mo",transform:"translate(5605.7,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mo",transform:"translate(6327.9,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(6827.9,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"当")]),t("g",{"data-mml-node":"mi",transform:"translate(7827.9,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"前")]),t("g",{"data-mml-node":"mo",transform:"translate(9050.1,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mo",transform:"translate(9772.3,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(10272.3,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"状")]),t("g",{"data-mml-node":"mi",transform:"translate(11272.3,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"态")]),t("g",{"data-mml-node":"mi",transform:"translate(12272.3,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"下")]),t("g",{"data-mml-node":"mi",transform:"translate(13272.3,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"的")]),t("g",{"data-mml-node":"mi",transform:"translate(14272.3,0)"},[t("path",{"data-c":"1D451",d:"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(14792.3,0)"},[t("path",{"data-c":"1D44E",d:"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(15321.3,0)"},[t("path",{"data-c":"1D461",d:"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(15682.3,0)"},[t("path",{"data-c":"1D44E",d:"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(16211.3,0)"},[t("text",{"data-variant":"italic",transform:"scale(1,-1)","font-size":"884px","font-family":"serif","font-style":"italic"},"，")]),t("g",{"data-mml-node":"mi",transform:"translate(17211.3,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"通")]),t("g",{"data-mml-node":"mi",transform:"translate(18211.3,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"过")]),t("g",{"data-mml-node":"mo",transform:"translate(19433.6,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mo",transform:"translate(20155.8,0)"},[t("path",{"data-c":"2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(20655.8,0)"},[t("path",{"data-c":"1D461",d:"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(21016.8,0)"},[t("path",{"data-c":"210E",d:"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(21592.8,0)"},[t("path",{"data-c":"1D456",d:"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(21937.8,0)"},[t("path",{"data-c":"1D460",d:"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mo",transform:"translate(22406.8,0)"},[t("path",{"data-c":"2E",d:"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z",style:{"stroke-width":"3"}})])])],-1)])])),l(y,{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},{default:i(()=>[...m[18]||(m[18]=[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"d"),t("mi",null,"a"),t("mi",null,"t"),t("mi",null,"a"),t("mo",null,"∗"),t("mo",null,"∗"),t("mi",{mathvariant:"normal"},"获"),t("mi",{mathvariant:"normal"},"取"),t("mo",null,"∗"),t("mo",null,"∗"),t("mi",{mathvariant:"normal"},"当"),t("mi",{mathvariant:"normal"},"前"),t("mo",null,"∗"),t("mo",null,"∗"),t("mi",{mathvariant:"normal"},"状"),t("mi",{mathvariant:"normal"},"态"),t("mi",{mathvariant:"normal"},"下"),t("mi",{mathvariant:"normal"},"的"),t("mi",null,"d"),t("mi",null,"a"),t("mi",null,"t"),t("mi",null,"a"),t("mi",null,"，"),t("mi",{mathvariant:"normal"},"通"),t("mi",{mathvariant:"normal"},"过"),t("mo",null,"∗"),t("mo",null,"∗"),t("mi",null,"t"),t("mi",null,"h"),t("mi",null,"i"),t("mi",null,"s"),t("mo",null,".")],-1)])]),_:1})]),_:1}),m[20]||(m[20]=r("options.data()",-1)),m[21]||(m[21]=t("strong",null,"获取该组件",-1)),m[22]||(m[22]=r("初始状态",-1))]),m[24]||(m[24]=r("下的data。",-1))]),t("p",null,[m[27]||(m[27]=r("然后只要使用**Object.assign(this.",-1)),l(k,{class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},{default:i(()=>[(e(),n("svg",T,[...m[25]||(m[25]=[t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mi"},[t("path",{"data-c":"1D451",d:"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(520,0)"},[t("path",{"data-c":"1D44E",d:"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(1049,0)"},[t("path",{"data-c":"1D461",d:"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(1410,0)"},[t("path",{"data-c":"1D44E",d:"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mo",transform:"translate(1939,0)"},[t("path",{"data-c":"2C",d:"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(2383.7,0)"},[t("path",{"data-c":"1D461",d:"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(2744.7,0)"},[t("path",{"data-c":"210E",d:"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(3320.7,0)"},[t("path",{"data-c":"1D456",d:"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(3665.7,0)"},[t("path",{"data-c":"1D460",d:"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mo",transform:"translate(4134.7,0)"},[t("path",{"data-c":"2E",d:"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z",style:{"stroke-width":"3"}})])])],-1)])])),l(y,{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},{default:i(()=>[...m[26]||(m[26]=[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"d"),t("mi",null,"a"),t("mi",null,"t"),t("mi",null,"a"),t("mo",null,","),t("mi",null,"t"),t("mi",null,"h"),t("mi",null,"i"),t("mi",null,"s"),t("mo",null,".")],-1)])]),_:1})]),_:1}),m[28]||(m[28]=r("options.data())**就可以将当前状态的data重置为初始状态。",-1))]),m[40]||(m[40]=p('<h2 id="_20、vue怎么实现强制刷新组件" tabindex="-1"><strong>20、vue怎么实现强制刷新组件？</strong> <a class="header-anchor" href="#_20、vue怎么实现强制刷新组件" aria-label="Permalink to &quot;**20、vue怎么实现强制刷新组件？**&quot;">​</a></h2><p>答：① v-if ② this.$forceUpdate</p><p><strong>v-if</strong></p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>当v-if的值发生变化时，组件都会被重新渲染一遍。因此，利用v-if指令的特性，可以达到强制</span></span>\n<span class="line"><span>&lt;comp v-if=&quot;update&quot;&gt;&lt;/comp&gt;</span></span>\n<span class="line"><span>&lt;button @click=&quot;reload()&quot;&gt;刷新comp组件&lt;/button&gt;</span></span>\n<span class="line"><span>data() {</span></span>\n<span class="line"><span> return {</span></span>\n<span class="line"><span>   update: true</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span> },</span></span>\n<span class="line"><span> methods: {</span></span>\n<span class="line"><span>  reload() {</span></span>\n<span class="line"><span>     // 移除组件</span></span>\n<span class="line"><span>    this.update = false</span></span>\n<span class="line"><span>      // 在组件移除后，重新渲染组件</span></span>\n<span class="line"><span>      // this.$nextTick可实现在DOM 状态更新后，执行传入的方法。</span></span>\n<span class="line"><span>    this.$nextTick(() =&gt; {</span></span>\n<span class="line"><span>      this.update = true</span></span>\n<span class="line"><span>    })</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p><strong>this.$forceUpdate</strong></p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;button @click=&quot;reload()&quot;&gt;刷新当前组件&lt;/button&gt;</span></span>\n<span class="line"><span>methods: {</span></span>\n<span class="line"><span>  reload() {</span></span>\n<span class="line"><span>    this.$forceUpdate()</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="_21、vue如何优化首页的加载速度" tabindex="-1"><strong>21、vue如何优化首页的加载速度？</strong> <a class="header-anchor" href="#_21、vue如何优化首页的加载速度" aria-label="Permalink to &quot;**21、vue如何优化首页的加载速度？**&quot;">​</a></h2><p>① 第三方js库按CDN引入（一、cdn引入 二、去掉第三方库引入的import 三、把第三方库的js文件从打包文件里去掉）</p><p>② vue-router路由懒加载</p><p>③ 压缩图片资源</p><p>④ 静态文件本地缓存</p><p>http缓存：推荐网站：<a href="https://www.cnblogs.com/chinajava/p/5705169.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/chinajava/p/5705169.html</a></p><p>service worker离线缓存:，缺点：需要在HTTPS站点下，推荐：<a href="http://lzw.me/a/pwa-service-worker.html" target="_blank" rel="noreferrer">http://lzw.me/a/pwa-service-worker.html</a></p><p>⑤ 服务器端SSR渲染</p><p>除了上面的方案以外，另一种方案也不容小视</p><p>我们先说说通常项目中是如何加载页面数据：Vue组件生命周期中请求异步接口，在mounted之前应该都可以，据我了解绝大部分同学是在mounted的时候执行异步请求。但是我们可以把页面需要的请求放到Vue-Router的守卫中执行，意思是在路由beforeEnter之前就可以请求待加载页面中所有组件需要的数据，此时待加载页面的Vue组件还没开始渲染，而Vue组件开始渲染的时候我们就可以用Vuex里面的数据了。</p><p>以上方法的实现思路：</p><p><img src="https://pic4.zhimg.com/80/v2-e50f50b5bacfe047d6f77e35ccecc227_720w.jpg" alt="img"></p><p>图意：每个页面（Page）中都会有很多个Vue组件，可以在Vue组件中添加自定义属性fetchData，fetchData里面可以执行异步请求（图中执行Vuex的Action），但是我们怎么获取到所有组件的fetchData方法并执行呢？如图所示，在router.beforeResolve守卫中，我们看看router.beforeResolve的定义，所有组件内守卫和异步路由组件被解析之后，解析守卫就被调用，意思是即使页面中有异步组件，它会等待异步组件解析之后执行，并且解析守卫在beforeEnter之前执行。那我们怎么在解析守卫中获取到待加载页面的所有组件呢？通过router.getMatchedComponents方法。</p><p><img src="https://pic4.zhimg.com/80/v2-e7a0ab9ba52eed170186fb1bf72cdbe3_720w.jpg" alt="img"></p><p><img src="https://pic1.zhimg.com/80/v2-1625817e26fb7959c3b65e8d8cc0846c_720w.jpg" alt="img"></p><p>这样我们就可以在解析守卫中获取到所有待加载组件的fetchData方法并执行，这样无疑会在组件开始渲染之后获取到所有数据，提高页面加载速度。</p><p>很多人可能有个疑问，如果异步请求放在beforeCreate和created不是一样吗？答案是否定的，因为这种方式可以将异步请求放到beforeCreate之前！</p><h2 id="_22、你了解vue的diff算法吗" tabindex="-1"><strong>22、你了解vue的diff算法吗？</strong> <a class="header-anchor" href="#_22、你了解vue的diff算法吗" aria-label="Permalink to &quot;**22、你了解vue的diff算法吗？**&quot;">​</a></h2><p>推荐网站：<a href="https://www.cnblogs.com/wind-lanyan/p/9061684.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/wind-lanyan/p/9061684.html</a></p><h2 id="_23、vue能监听到数组变化的方法有哪些-为什么这些方法能监听到呢" tabindex="-1"><strong>23、vue能监听到数组变化的方法有哪些？为什么这些方法能监听到呢？</strong> <a class="header-anchor" href="#_23、vue能监听到数组变化的方法有哪些-为什么这些方法能监听到呢" aria-label="Permalink to &quot;**23、vue能监听到数组变化的方法有哪些？为什么这些方法能监听到呢？**&quot;">​</a></h2><p>Vue.js观察数组变化主要通过以下7个方法（push、pop、shift、unshift、splice、sort、reverse）</p><p>大家知道，通过Object.defineProperty()劫持数组为其设置getter和setter后，调用的数组的push、splice、pop等方法改变数组元素时并不会触发数组的setter，继而数组的数据变化并不是响应式的，但是vue实际开发中却是实时响应的，是因为vue重写了数组的push、splice、pop等方法</p><p>从源码中可以看出，ob.dep.notify()将当前数组的变更通知给其订阅者，这样当使用重写后方法改变数组后，数组订阅者会将这边变化更新到页面中</p><h2 id="_24、说说你对proxy的理解" tabindex="-1"><strong>24、说说你对proxy的理解？</strong> <a class="header-anchor" href="#_24、说说你对proxy的理解" aria-label="Permalink to &quot;**24、说说你对proxy的理解？**&quot;">​</a></h2><p>Proxy用于修改某些操作的默认行为，也可以理解为在目标对象之前架设一层拦截，外部所有的访问都必须先通过这层拦截，因此提供了一种机制，可以对外部的访问进行过滤和修改。</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>var target = {</span></span>\n<span class="line"><span>   name: &#39;zhangsan&#39;,</span></span>\n<span class="line"><span>   age:20,</span></span>\n<span class="line"><span>   sex:&#39;男&#39;</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span>var logHandler = {</span></span>\n<span class="line"><span>  get(target, key) {</span></span>\n<span class="line"><span>    console.log(`${key}被读取`)</span></span>\n<span class="line"><span>    return target[key]</span></span>\n<span class="line"><span>   },</span></span>\n<span class="line"><span>  set(target, key, value) {</span></span>\n<span class="line"><span>    console.log(`${key}被设置为${value}`)</span></span>\n<span class="line"><span>    target[key] = value</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span>}</span></span>\n<span class="line"><span>var demo = new Proxy(target, logHandler)</span></span>\n<span class="line"><span>demo.name  //name被读取</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>var proxy = new Proxy(target, handler);</p><p>Proxy对象的所有用法，都是上面的这种形式。不同的只是handle参数的写法。其中new Proxy用来生成Proxy实例，target是表示所要拦截的对象，handle是用来定制拦截行为的对象。</p><p>我们可以将Proxy对象，设置到object.proxy属性，从而可以在object对象上调用。</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>var object = { proxy: new Proxy(target, handler) };</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Proxy对象也可以作为其它对象的原型对象。</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>var proxy = new Proxy({}, {</span></span>\n<span class="line"><span>  get: function(target, property) {</span></span>\n<span class="line"><span>    return 35;</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span>});</span></span>\n<span class="line"><span>let obj = Object.create(proxy);</span></span>\n<span class="line"><span>obj.time // 35</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>上面代码中，proxy对象是obj的原型对象，obj本身并没有time属性，所以根据原型链，会在proxy对象上读取属性，从而被拦截。</p><p>同一个拦截函数，可以设置多个操作。</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>var handler = {</span></span>\n<span class="line"><span>  get: function (target, name) {</span></span>\n<span class="line"><span>    if (name === &#39;prototype&#39;) {</span></span>\n<span class="line"><span>       return Object.prototype;</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>    return &#39;Hello, &#39; + name;</span></span>\n<span class="line"><span>  },</span></span>\n<span class="line"><span> </span></span>\n<span class="line"><span>  apply: function (target, thisBinding, args) {</span></span>\n<span class="line"><span>    return args[0];</span></span>\n<span class="line"><span>  },</span></span>\n<span class="line"><span> </span></span>\n<span class="line"><span>  construct: function (target, args) {</span></span>\n<span class="line"><span>    return { value: args[1] };</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span>};</span></span>\n<span class="line"><span> </span></span>\n<span class="line"><span>var fproxy = new Proxy(function (x, y) {</span></span>\n<span class="line"><span>    return x + y;</span></span>\n<span class="line"><span>}, handler);</span></span>\n<span class="line"><span> </span></span>\n<span class="line"><span>fproxy(1, 2) // 1</span></span>\n<span class="line"><span>new fproxy(1, 2) // {value: 2}</span></span>\n<span class="line"><span>fproxy.prototype === Object.prototype // true</span></span>\n<span class="line"><span>fproxy.foo === &quot;Hello, foo&quot; // true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="_25、怎么缓存当前的组件-缓存后怎么更新" tabindex="-1"><strong>25、怎么缓存当前的组件？缓存后怎么更新？</strong> <a class="header-anchor" href="#_25、怎么缓存当前的组件-缓存后怎么更新" aria-label="Permalink to &quot;**25、怎么缓存当前的组件？缓存后怎么更新？**&quot;">​</a></h2><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;keep-alive&gt;</span></span>\n<span class="line"><span>    &lt;router-view&gt;&lt;/router-view&gt;</span></span>\n<span class="line"><span>&lt;/keep-alive&gt;</span></span>\n<span class="line"><span>&lt;!-- 这里是需要keepalive的 --&gt;</span></span>\n<span class="line"><span>&lt;keep-alive&gt;</span></span>\n<span class="line"><span>    &lt;router-view v-if=&quot;$route.meta.keepAlive&quot;&gt;&lt;/router-view&gt;</span></span>\n<span class="line"><span>&lt;/keep-alive&gt;</span></span>\n<span class="line"><span>&lt;!-- 这里不会被keepalive --&gt;</span></span>\n<span class="line"><span>&lt;router-view v-if=&quot;!$route.meta.keepAlive&quot;&gt;&lt;/router-view&gt;</span></span>\n<span class="line"><span>{</span></span>\n<span class="line"><span>  path: &#39;&#39;,</span></span>\n<span class="line"><span>  name: &#39;&#39;,</span></span>\n<span class="line"><span>  component: ,</span></span>\n<span class="line"><span>  meta: {keepAlive: true} // 这个是需要keepalive的</span></span>\n<span class="line"><span>},</span></span>\n<span class="line"><span>{</span></span>\n<span class="line"><span>  path: &#39;&#39;,</span></span>\n<span class="line"><span>  name: &#39;&#39;,</span></span>\n<span class="line"><span>  component: ,</span></span>\n<span class="line"><span>  meta: {keepAlive: false} // 这是不会被keepalive的</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>如果缓存的组件想要清空数据或者执行初始化方法，在加载组件的时候调用activated钩子函数，如下：</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>activated: function () {</span></span>\n<span class="line"><span>    this.data = &#39;&#39;;</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_26、axios怎么解决跨域的问题" tabindex="-1"><strong>26、axios怎么解决跨域的问题？</strong> <a class="header-anchor" href="#_26、axios怎么解决跨域的问题" aria-label="Permalink to &quot;**26、axios怎么解决跨域的问题？**&quot;">​</a></h2><p>使用axios直接进行跨域访问不可行，我们需要配置代理</p><p>代理可以解决的原因：</p><p>因为客户端请求服务端的数据是存在跨域问题的，而<strong>服务器和服务器之间可以相互请求数据，是没有跨域的概念</strong>（如果服务器没有设置禁止跨域的权限问题），也就是说，我们可以配置一个代理的服务器可以请求另一个服务器中的数据，然后把请求出来的数据返回到我们的代理服务器中，代理服务器再返回数据给我们的客户端，这样我们就可以实现跨域访问数据</p><p>1.配置BaseUrl</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import axios from &#39;axios&#39;</span></span>\n<span class="line"><span>Vue.prototype.$axios = axios</span></span>\n<span class="line"><span>axios.defaults.baseURL = &#39;/api&#39;  //关键代码</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>2.配置代理</p><p>在config文件夹下的index.js文件中的proxyTable字段中，作如下处理：</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>proxyTable: {</span></span>\n<span class="line"><span> &#39;/api&#39;: {</span></span>\n<span class="line"><span>   target:&#39;http://api.douban.com/v2&#39;, // 你请求的第三方接口</span></span>\n<span class="line"><span>   changeOrigin:true, </span></span>\n<span class="line"><span>// 在本地会创建一个虚拟服务端，然后发送请求的数据，并同时接收请求的数据，</span></span>\n<span class="line"><span>//这样服务端和服务端进行数据的交互就不会有跨域问题</span></span>\n<span class="line"><span>   pathRewrite:{  // 路径重写，</span></span>\n<span class="line"><span>    &#39;^/api&#39;: &#39;&#39;  </span></span>\n<span class="line"><span>// 替换target中的请求地址，也就是说以后你在请求http://api.douban.com/v2/XXXXX</span></span>\n<span class="line"><span>//这个地址的时候直接写成/api即可。</span></span>\n<span class="line"><span>   }</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\\1. 在具体使用axios的地方，修改url如下即可</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>axios.get(&quot;/movie/top250&quot;).then((res) =&gt; {</span></span>\n<span class="line"><span>  res = res.data</span></span>\n<span class="line"><span>  if (res.errno === ERR_OK) {</span></span>\n<span class="line"><span>    this.themeList=res.data;</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span> }).catch((error) =&gt; {</span></span>\n<span class="line"><span>  console.warn(error)</span></span>\n<span class="line"><span>})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>原理：</p><p>因为我们给url加上了前缀/api，我们访问/movie/top250就当于访问了：localhost:8080/api/movie/top250（其中localhost:8080是默认的IP和端口）。</p><p>在index.js中的proxyTable中拦截了/api,<strong>并把/api及其前面的所有</strong>替换成了target中的内容，因此实际访问Url是<a href="http://api.douban.com/v2/movie/top250%E3%80%82" target="_blank" rel="noreferrer">http://api.douban.com/v2/movie/top250。</a></p><p>至此，纯前端配置代理解决axios跨域得到解决</p><h2 id="_27、怎么实现路由懒加载呢" tabindex="-1"><strong>27、怎么实现路由懒加载呢？</strong> <a class="header-anchor" href="#_27、怎么实现路由懒加载呢" aria-label="Permalink to &quot;**27、怎么实现路由懒加载呢？**&quot;">​</a></h2><p>第一种（最常用）：</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>const Foo = () =&gt; import(&#39;./Foo.vue&#39;)</span></span>\n<span class="line"><span>const router = new VueRouter({</span></span>\n<span class="line"><span>  routes: [</span></span>\n<span class="line"><span>    { path: &#39;/foo&#39;, component: Foo }</span></span>\n<span class="line"><span>  ]</span></span>\n<span class="line"><span>})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>第二种：</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>const router = new Router({</span></span>\n<span class="line"><span>  routes: [</span></span>\n<span class="line"><span>   {</span></span>\n<span class="line"><span>     path: &#39;/index&#39;,</span></span>\n<span class="line"><span>     component: (resolve) =&gt; {</span></span>\n<span class="line"><span>        require([&#39;../components/index&#39;], resolve) // 这里是你的模块 不用import去引入了</span></span>\n<span class="line"><span>     }</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>  ]</span></span>\n<span class="line"><span>})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>第三种（官方推荐）：</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// r就是resolve</span></span>\n<span class="line"><span>const list = r =&gt; require.ensure([], () =&gt; r(require(&#39;../components/list/list&#39;)), &#39;list&#39;);</span></span>\n<span class="line"><span>// 路由也是正常的写法  这种是官方推荐的写的 按模块划分懒加载 </span></span>\n<span class="line"><span>const router = new Router({</span></span>\n<span class="line"><span>  routes: [</span></span>\n<span class="line"><span>  {</span></span>\n<span class="line"><span>    path: &#39;/list/blog&#39;,</span></span>\n<span class="line"><span>    component: list,</span></span>\n<span class="line"><span>    name: &#39;blog&#39;</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span> ]</span></span>\n<span class="line"><span>})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="_28、怎样动态加载路由" tabindex="-1"><strong>28、怎样动态加载路由？</strong> <a class="header-anchor" href="#_28、怎样动态加载路由" aria-label="Permalink to &quot;**28、怎样动态加载路由？**&quot;">​</a></h2><p>一、思路</p><p>① 在vue-router对象中首先<strong>初始化公共路由</strong>，比如（首页，404，login）等</p><p>② 用户登陆成功后，根据用户的角色信息，<strong>获取对应权限菜单信息menuList</strong>，并将后台返回的menuList转换成我们需要的router数据结构</p><p>③ 通过**router.addRouter(routes)**方法，同时我们可以将转后的路由信息保存于vuex，这样我们可以在我们的SideBar组件中获取我们的全部路由信息，并且渲染我们的左侧菜单栏，让动态路由实现。</p><p>二、实现</p><p>① 初始化公共路由</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>//只显示主要代码</span></span>\n<span class="line"><span>export const routes= [</span></span>\n<span class="line"><span> { path: &#39;/login&#39;, component: () =&gt; import(&#39;@/views/login/index&#39;), hidden: true },</span></span>\n<span class="line"><span> { path: &#39;/404&#39;, component: () =&gt; import(&#39;@/views/404&#39;), hidden: true }</span></span>\n<span class="line"><span>]</span></span>\n<span class="line"><span>export default new Router({</span></span>\n<span class="line"><span> scrollBehavior: () =&gt; ({ y: 0 }),</span></span>\n<span class="line"><span> routes: routes</span></span>\n<span class="line"><span>})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>② 登陆成功后，获取菜单信息 menuList，并转换成router数组的结构</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>router.beforeEach((to, from, next) =&gt; {</span></span>\n<span class="line"><span> NProgress.start()//进度条包 npm安装</span></span>\n<span class="line"><span> if (getToken()) { </span></span>\n<span class="line"><span>  /*有 token，已经登录成功*/</span></span>\n<span class="line"><span>  if (to.path === &#39;/login&#39;) {</span></span>\n<span class="line"><span>   next({ path: &#39;/&#39; })</span></span>\n<span class="line"><span>   NProgress.done() </span></span>\n<span class="line"><span>  } else {</span></span>\n<span class="line"><span>   if (store.getters.roles.length === 0) { // 判断当前用户是否已拉取完user_info信息</span></span>\n<span class="line"><span>    store.dispatch(&#39;GetInfo&#39;).then(res =&gt; { // 拉取user_info</span></span>\n<span class="line"><span>     const roles = res.roles</span></span>\n<span class="line"><span>     store.dispatch(&quot;GetMenu&quot;).then(data =&gt; {</span></span>\n<span class="line"><span>      initMenu(router, data);</span></span>\n<span class="line"><span>     });</span></span>\n<span class="line"><span>     next()</span></span>\n<span class="line"><span>    }).catch((err) =&gt; {</span></span>\n<span class="line"><span>     store.dispatch(&#39;FedLogOut&#39;).then(() =&gt; {</span></span>\n<span class="line"><span>      Message.error(err || &#39;Verification failed, please login again&#39;)</span></span>\n<span class="line"><span>      next({ path: &#39;/&#39; })</span></span>\n<span class="line"><span>     })</span></span>\n<span class="line"><span>    })</span></span>\n<span class="line"><span>   } else {</span></span>\n<span class="line"><span>    next()</span></span>\n<span class="line"><span>   }</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span> } else {</span></span>\n<span class="line"><span>  /* 无 token*/</span></span>\n<span class="line"><span>  if (whiteList.indexOf(to.path) !== -1) { // 在免登录白名单，直接进入</span></span>\n<span class="line"><span>   next()</span></span>\n<span class="line"><span>  } else {</span></span>\n<span class="line"><span>   next(&#39;/login&#39;) // 否则全部重定向到登录页</span></span>\n<span class="line"><span>   NProgress.done() </span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span>})</span></span>\n<span class="line"><span>router.afterEach(() =&gt; {</span></span>\n<span class="line"><span> NProgress.done() </span></span>\n<span class="line"><span>})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p>③ 动态加载路由</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import store from &#39;../store&#39;</span></span>\n<span class="line"><span>export const initMenu = (router, menu) =&gt; {</span></span>\n<span class="line"><span> if (menu.length === 0) {</span></span>\n<span class="line"><span>  return</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span> let menus = formatRoutes(menu);</span></span>\n<span class="line"><span> </span></span>\n<span class="line"><span> let unfound = { path: &#39;*&#39;, redirect: &#39;/404&#39;, hidden: true }</span></span>\n<span class="line"><span> menus.push(unfound) //404组件最后添加</span></span>\n<span class="line"><span> router.addRoutes(menus)</span></span>\n<span class="line"><span> store.commit(&#39;ADD_ROUTERS&#39;,menus)</span></span>\n<span class="line"><span>}</span></span>\n<span class="line"><span>export const formatRoutes = (aMenu) =&gt; {</span></span>\n<span class="line"><span> const aRouter = []</span></span>\n<span class="line"><span> aMenu.forEach(oMenu =&gt; {</span></span>\n<span class="line"><span>  const {</span></span>\n<span class="line"><span>   path,</span></span>\n<span class="line"><span>   component,</span></span>\n<span class="line"><span>   name,</span></span>\n<span class="line"><span>   icon,</span></span>\n<span class="line"><span>   childrens</span></span>\n<span class="line"><span>  } = oMenu</span></span>\n<span class="line"><span>  if (!validatenull(component)) {</span></span>\n<span class="line"><span>   let filePath;</span></span>\n<span class="line"><span>   const oRouter = {</span></span>\n<span class="line"><span>    path: path,</span></span>\n<span class="line"><span>    component(resolve) {</span></span>\n<span class="line"><span>     let componentPath = &#39;&#39;</span></span>\n<span class="line"><span>     if (component === &#39;Layout&#39;) {</span></span>\n<span class="line"><span>      require([&#39;../views/layout/Layout&#39;], resolve)</span></span>\n<span class="line"><span>      return</span></span>\n<span class="line"><span>     } else {</span></span>\n<span class="line"><span>      componentPath = component</span></span>\n<span class="line"><span>     }</span></span>\n<span class="line"><span>     require([`../${componentPath}.vue`], resolve)</span></span>\n<span class="line"><span>    },</span></span>\n<span class="line"><span>    name: name,</span></span>\n<span class="line"><span>    icon: icon,</span></span>\n<span class="line"><span>    children: validatenull(childrens) ? [] : formatRoutes(childrens)</span></span>\n<span class="line"><span>   }</span></span>\n<span class="line"><span>   aRouter.push(oRouter)</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span> })</span></span>\n<span class="line"><span> return aRouter</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><p>④ 渲染菜单</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;template&gt;</span></span>\n<span class="line"><span> &lt;el-scrollbar wrapClass=&quot;scrollbar-wrapper&quot;&gt;</span></span>\n<span class="line"><span>  &lt;el-menu</span></span>\n<span class="line"><span>   mode=&quot;vertical&quot;</span></span>\n<span class="line"><span>   :show-timeout=&quot;200&quot;</span></span>\n<span class="line"><span>   :default-active=&quot;$route.path&quot;</span></span>\n<span class="line"><span>   :collapse=&quot;isCollapse&quot;</span></span>\n<span class="line"><span>   background-color=&quot;#304156&quot;</span></span>\n<span class="line"><span>   text-color=&quot;#bfcbd9&quot;</span></span>\n<span class="line"><span>   active-text-color=&quot;#409EFF&quot;</span></span>\n<span class="line"><span>  &gt;</span></span>\n<span class="line"><span>   &lt;sidebar-item v-for=&quot;route in permission_routers&quot; :key=&quot;route.name&quot; :item=&quot;route&quot; :base-path=&quot;route.path&quot;&gt;&lt;/sidebar-item&gt;</span></span>\n<span class="line"><span>  &lt;/el-menu&gt;</span></span>\n<span class="line"><span> &lt;/el-scrollbar&gt;</span></span>\n<span class="line"><span>&lt;/template&gt;</span></span>\n<span class="line"><span> </span></span>\n<span class="line"><span>&lt;script&gt;</span></span>\n<span class="line"><span>import { mapGetters } from &#39;vuex&#39;</span></span>\n<span class="line"><span>import SidebarItem from &#39;./SidebarItem&#39;</span></span>\n<span class="line"><span>import { validatenull } from &quot;@/utils/validate&quot;;</span></span>\n<span class="line"><span>import { initMenu } from &quot;@/utils/util&quot;;</span></span>\n<span class="line"><span> </span></span>\n<span class="line"><span>export default {</span></span>\n<span class="line"><span> components: { SidebarItem },</span></span>\n<span class="line"><span> created() {</span></span>\n<span class="line"><span> },</span></span>\n<span class="line"><span> computed: {</span></span>\n<span class="line"><span>  ...mapGetters([</span></span>\n<span class="line"><span>   &#39;permission_routers&#39;,</span></span>\n<span class="line"><span>   &#39;sidebar&#39;,</span></span>\n<span class="line"><span>   &#39;addRouters&#39;</span></span>\n<span class="line"><span>  ]),</span></span>\n<span class="line"><span>  isCollapse() {</span></span>\n<span class="line"><span>   return !this.sidebar.opened</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span>}</span></span>\n<span class="line"><span>&lt;/script&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p>就这样我们动态加载路由就是实现了，关键点就是router.addRoute方法</p><p>⑤ 防坑</p><p>点击刷新的时候页面空白 控制台也不报错？</p><p>点击刷新，vue-router会重新初始化，那么我们之前的动态addRoute就不存在了，此时访问一个不存在的页面，所以我们的sidebar组件也就不会被访问，那么也无法获取菜单信息，就导致页面空白。所以我们需要把加载菜单信息这一步放在router的全局守卫beforeEach中就可以了。</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>export const initMenu = (router, menu) =&gt; {</span></span>\n<span class="line"><span> if (menu.length === 0) {</span></span>\n<span class="line"><span>  return</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span> let menus = formatRoutes(menu);</span></span>\n<span class="line"><span> // 最后添加</span></span>\n<span class="line"><span> let unfound = { path: &#39;*&#39;, redirect: &#39;/404&#39;, hidden: true }</span></span>\n<span class="line"><span> menus.push(unfound)</span></span>\n<span class="line"><span> router.addRoutes(menus)</span></span>\n<span class="line"><span> store.commit(&#39;ADD_ROUTERS&#39;,menus)</span></span>\n<span class="line"><span>}</span></span>\n<span class="line"><span>//404组件一定要放在动态路由组件的最后，不然你刷新动态加载的页面，会跳转到404页面的</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="_29、切换到新路由时-页面要滚动到顶部或保持原先的滚动位置怎么做呢" tabindex="-1"><strong>29、切换到新路由时，页面要滚动到顶部或保持原先的滚动位置怎么做呢？</strong> <a class="header-anchor" href="#_29、切换到新路由时-页面要滚动到顶部或保持原先的滚动位置怎么做呢" aria-label="Permalink to &quot;**29、切换到新路由时，页面要滚动到顶部或保持原先的滚动位置怎么做呢？**&quot;">​</a></h2><p>当创建一个 Router 实例，可以提供一个 <strong>scrollBehavior</strong> 方法：</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>注意: 这个功能只在 HTML5 history 模式下可用。</span></span>\n<span class="line"><span>const router = new VueRouter({</span></span>\n<span class="line"><span> routes: [...],</span></span>\n<span class="line"><span> scrollBehavior (to, from, savedPosition) {</span></span>\n<span class="line"><span>  // return 期望滚动到哪个的位置</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span>})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>scrollBehavior 方法接收 to 和 from 路由对象。第三个参数 savedPosition 当且仅当 popstate 导航 (通过浏览器的 前进/后退 按钮触发) 时才可用。</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>scrollBehavior (to, from, savedPosition) {</span></span>\n<span class="line"><span> return { x: 0, y: 0 }</span></span>\n<span class="line"><span>}</span></span>\n<span class="line"><span>对于所有路由导航，简单地让页面滚动到顶部。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>返回 savedPosition，在按下 后退/前进 按钮时，在滚动条位置，就会像浏览器的原生表现那样：</span></span>\n<span class="line"><span>scrollBehavior (to, from, savedPosition) {</span></span>\n<span class="line"><span> if (savedPosition) {</span></span>\n<span class="line"><span>  return savedPosition</span></span>\n<span class="line"><span> } else {</span></span>\n<span class="line"><span>  return { x: 0, y: 0 }</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>模拟『滚动到锚点』的行为</span></span>\n<span class="line"><span>scrollBehavior (to, from, savedPosition) {</span></span>\n<span class="line"><span> if (to.hash) {</span></span>\n<span class="line"><span>  return {</span></span>\n<span class="line"><span>   selector: to.hash</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>还可以利用路由元信息更细颗粒度地控制滚动。</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>routes: [</span></span>\n<span class="line"><span> { path: &#39;/&#39;, component: Home, meta: { scrollToTop: true }},</span></span>\n<span class="line"><span> { path: &#39;/foo&#39;, component: Foo },</span></span>\n<span class="line"><span> { path: &#39;/bar&#39;, component: Bar, meta: { scrollToTop: true }}</span></span>\n<span class="line"><span>]</span></span>\n<span class="line"><span>const scrollBehavior = (to, from, savedPosition) =&gt; {</span></span>\n<span class="line"><span> if (savedPosition) {</span></span>\n<span class="line"><span>  return savedPosition</span></span>\n<span class="line"><span> } else {</span></span>\n<span class="line"><span>  const position = {}</span></span>\n<span class="line"><span>  if (to.hash) {</span></span>\n<span class="line"><span>   position.selector = to.hash</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span>   if (to.matched.some(m =&gt; m.meta.scrollToTop)) {</span></span>\n<span class="line"><span>   position.x = 0</span></span>\n<span class="line"><span>   position.y = 0</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span>  return position</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>还可以在main.js入口文件配合vue-router写这个</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>router.afterEach((to,from,next) =&gt; {</span></span>\n<span class="line"><span>  window.scrollTo(0,0);</span></span>\n<span class="line"><span>});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_30、vue-router如何响应路由参数的变化" tabindex="-1"><strong>30、vue-router如何响应路由参数的变化？</strong> <a class="header-anchor" href="#_30、vue-router如何响应路由参数的变化" aria-label="Permalink to &quot;**30、vue-router如何响应路由参数的变化？**&quot;">​</a></h2><p>当使用路由参数时，比如：</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{path:’/list/:id’component:Foo}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>从 /list/aside导航到 /list/foo，原来的组件实例会被复用。</p><p>因为两个路由都渲染同个组件Foo，比起销毁再创建，复用则更加高效。</p><p>不过，这也意味着组件的<strong>生命周期钩子不会再被调用</strong>。</p><p>如果跳转到相同的路由还会报以下错误</p><p><img src="https://pic4.zhimg.com/80/v2-7a910b8e923f450d5e19b173a80cc073_720w.png" alt="img"></p><p>这个时候我们需要重写push方法，在src/router/index.js 里面import VueRouter from &#39;vue-router&#39;下面写入下面方法即可</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>const routerPush = VueRouter.prototype.push</span></span>\n<span class="line"><span>VueRouter.prototype.push = function push(location) {</span></span>\n<span class="line"><span>  return routerPush.call(this, location).catch(error=&gt; error)</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>如何响应不同的数据呢？</strong></p><p>① 复用组件时，想对路由参数的变化作出响应的话，你可以简单地 <strong>watch (监测变化) $route 对象</strong>：</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>const User = {</span></span>\n<span class="line"><span>  template: &#39;...&#39;,</span></span>\n<span class="line"><span>  watch: {</span></span>\n<span class="line"><span>    &#39;$route&#39; (to, from) {</span></span>\n<span class="line"><span>      // 对路由变化作出响应...</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>② 使用<strong>beforeRouteUpdate</strong></p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>const User = {</span></span>\n<span class="line"><span>  template: &#39;...&#39;,</span></span>\n<span class="line"><span>  beforeRouteUpdate (to, from, next) {</span></span>\n<span class="line"><span>    // react to route changes...</span></span>\n<span class="line"><span>    // don&#39;t forget to call next()</span></span>\n<span class="line"><span>  }</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>注意：</p><p>（1）从同一个组件跳转到同一个组件。</p><p>（2）生命周期钩子created和mounted都不会调用。</p><h2 id="_31、vue模板中为什么以-、-开始的变量无法渲染" tabindex="-1"><strong>31、vue模板中为什么以_、$开始的变量无法渲染？</strong> <a class="header-anchor" href="#_31、vue模板中为什么以-、-开始的变量无法渲染" aria-label="Permalink to &quot;**31、vue模板中为什么以_、$开始的变量无法渲染？**&quot;">​</a></h2>',116)),t("p",null,[m[31]||(m[31]=r("名字以 _ 或 ",-1)),l(k,{class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},{default:i(()=>[(e(),n("svg",h,[...m[29]||(m[29]=[t("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[t("g",{"data-mml-node":"math"},[t("g",{"data-mml-node":"mi"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"开")]),t("g",{"data-mml-node":"mi",transform:"translate(1000,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"始")]),t("g",{"data-mml-node":"mi",transform:"translate(2000,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"的")]),t("g",{"data-mml-node":"mi",transform:"translate(3000,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"属")]),t("g",{"data-mml-node":"mi",transform:"translate(4000,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"性")]),t("g",{"data-mml-node":"mi",transform:"translate(5000,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"不")]),t("g",{"data-mml-node":"mi",transform:"translate(6000,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"会")]),t("g",{"data-mml-node":"mi",transform:"translate(7000,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"被")]),t("g",{"data-mml-node":"mi",transform:"translate(8000,0)"},[t("path",{"data-c":"1D449",d:"M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(8769,0)"},[t("path",{"data-c":"1D462",d:"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(9341,0)"},[t("path",{"data-c":"1D452",d:"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(9807,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"实")]),t("g",{"data-mml-node":"mi",transform:"translate(10807,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"例")]),t("g",{"data-mml-node":"mi",transform:"translate(11807,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"代")]),t("g",{"data-mml-node":"mi",transform:"translate(12807,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"理")]),t("g",{"data-mml-node":"mi",transform:"translate(13807,0)"},[t("text",{"data-variant":"italic",transform:"scale(1,-1)","font-size":"884px","font-family":"serif","font-style":"italic"},"，")]),t("g",{"data-mml-node":"mi",transform:"translate(14807,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"因")]),t("g",{"data-mml-node":"mi",transform:"translate(15807,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"为")]),t("g",{"data-mml-node":"mi",transform:"translate(16807,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"它")]),t("g",{"data-mml-node":"mi",transform:"translate(17807,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"们")]),t("g",{"data-mml-node":"mi",transform:"translate(18807,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"可")]),t("g",{"data-mml-node":"mi",transform:"translate(19807,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"能")]),t("g",{"data-mml-node":"mi",transform:"translate(20807,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"与")]),t("g",{"data-mml-node":"mi",transform:"translate(21807,0)"},[t("path",{"data-c":"1D449",d:"M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(22576,0)"},[t("path",{"data-c":"1D462",d:"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(23148,0)"},[t("path",{"data-c":"1D452",d:"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(23614,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"的")]),t("g",{"data-mml-node":"mi",transform:"translate(24614,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"内")]),t("g",{"data-mml-node":"mi",transform:"translate(25614,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"置")]),t("g",{"data-mml-node":"mi",transform:"translate(26614,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"属")]),t("g",{"data-mml-node":"mi",transform:"translate(27614,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"性")]),t("g",{"data-mml-node":"mi",transform:"translate(28614,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"与")]),t("g",{"data-mml-node":"mi",transform:"translate(29614,0)"},[t("path",{"data-c":"1D434",d:"M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(30364,0)"},[t("path",{"data-c":"1D443",d:"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(31115,0)"},[t("path",{"data-c":"1D43C",d:"M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(31619,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"方")]),t("g",{"data-mml-node":"mi",transform:"translate(32619,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"法")]),t("g",{"data-mml-node":"mi",transform:"translate(33619,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"冲")]),t("g",{"data-mml-node":"mi",transform:"translate(34619,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"突")]),t("g",{"data-mml-node":"TeXAtom","data-mjx-texclass":"ORD",transform:"translate(35619,0)"},[t("g",{"data-mml-node":"mo"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"。")])]),t("g",{"data-mml-node":"mi",transform:"translate(36619,0)"},[t("text",{"data-variant":"normal",transform:"scale(1,-1)","font-size":"884px","font-family":"serif"},"用")]),t("g",{"data-mml-node":"mi",transform:"translate(37619,0)"},[t("path",{"data-c":"1D463",d:"M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mi",transform:"translate(38104,0)"},[t("path",{"data-c":"1D45A",d:"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z",style:{"stroke-width":"3"}})]),t("g",{"data-mml-node":"mo",transform:"translate(38982,0)"},[t("path",{"data-c":"2E",d:"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z",style:{"stroke-width":"3"}})])])],-1)])])),l(y,{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},{default:i(()=>[...m[30]||(m[30]=[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",{mathvariant:"normal"},"开"),t("mi",{mathvariant:"normal"},"始"),t("mi",{mathvariant:"normal"},"的"),t("mi",{mathvariant:"normal"},"属"),t("mi",{mathvariant:"normal"},"性"),t("mi",{mathvariant:"normal"},"不"),t("mi",{mathvariant:"normal"},"会"),t("mi",{mathvariant:"normal"},"被"),t("mi",null,"V"),t("mi",null,"u"),t("mi",null,"e"),t("mi",{mathvariant:"normal"},"实"),t("mi",{mathvariant:"normal"},"例"),t("mi",{mathvariant:"normal"},"代"),t("mi",{mathvariant:"normal"},"理"),t("mi",null,"，"),t("mi",{mathvariant:"normal"},"因"),t("mi",{mathvariant:"normal"},"为"),t("mi",{mathvariant:"normal"},"它"),t("mi",{mathvariant:"normal"},"们"),t("mi",{mathvariant:"normal"},"可"),t("mi",{mathvariant:"normal"},"能"),t("mi",{mathvariant:"normal"},"与"),t("mi",null,"V"),t("mi",null,"u"),t("mi",null,"e"),t("mi",{mathvariant:"normal"},"的"),t("mi",{mathvariant:"normal"},"内"),t("mi",{mathvariant:"normal"},"置"),t("mi",{mathvariant:"normal"},"属"),t("mi",{mathvariant:"normal"},"性"),t("mi",{mathvariant:"normal"},"与"),t("mi",null,"A"),t("mi",null,"P"),t("mi",null,"I"),t("mi",{mathvariant:"normal"},"方"),t("mi",{mathvariant:"normal"},"法"),t("mi",{mathvariant:"normal"},"冲"),t("mi",{mathvariant:"normal"},"突"),t("mrow",{"data-mjx-texclass":"ORD"},[t("mo",null,"。")]),t("mi",{mathvariant:"normal"},"用"),t("mi",null,"v"),t("mi",null,"m"),t("mo",null,".")],-1)])]),_:1})]),_:1}),m[32]||(m[32]=r("data._property 访问它们。",-1))]),m[41]||(m[41]=p('<h2 id="_32、vue中-如何监听一个对象内部的变化" tabindex="-1">32、vue中，如何监听一个对象内部的变化？ <a class="header-anchor" href="#_32、vue中-如何监听一个对象内部的变化" aria-label="Permalink to &quot;32、vue中，如何监听一个对象内部的变化？&quot;">​</a></h2><p>方法①：对整个obj深层监听</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>watch:{</span></span>\n<span class="line"><span> obj:{</span></span>\n<span class="line"><span>  handler(newValue,oldValue){</span></span>\n<span class="line"><span>   console.log(&#39;obj changed&#39;)</span></span>\n<span class="line"><span>  },</span></span>\n<span class="line"><span>  deep: true,//深度遍历</span></span>\n<span class="line"><span>  immediate: true </span></span>\n<span class="line"><span>//默认第一次绑定的时候不会触发watch监听，值为true时可以在最初绑定的时候执行</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>方法② ：指定key</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>watch: {</span></span>\n<span class="line"><span>    &quot;dataobj.name&quot;: {</span></span>\n<span class="line"><span>      handler(newValue, oldValue) {</span></span>\n<span class="line"><span>        console.log(&quot;obj changed&quot;);</span></span>\n<span class="line"><span>      }</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>方法③：computed</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>computed(){</span></span>\n<span class="line"><span> ar(){</span></span>\n<span class="line"><span>  return this.obj.name</span></span>\n<span class="line"><span> }</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_33、v-for循环时为什么要加key" tabindex="-1">33、v-for循环时为什么要加key？ <a class="header-anchor" href="#_33、v-for循环时为什么要加key" aria-label="Permalink to &quot;33、v-for循环时为什么要加key？&quot;">​</a></h2><p>key的作用主要是为了高效的更新虚拟DOM，是因为Virtual DOM 使用Diff算法实现的原因。</p><p>当某一层有很多相同的节点时，也就是列表节点时，Diff算法的更新过程默认情况下也是遵循以上原则。</p><p>比如一下这个情况</p><p><img src="https://pic1.zhimg.com/80/v2-4c9826b151235aec26c17c3e3f960fb4_720w.jpg" alt="img"></p><p>我们希望可以在B和C之间加一个F，Diff算法默认执行起来是这样的：</p><p><img src="https://pic3.zhimg.com/80/v2-9c568b34de2ae6badcf816a941dc529e_720w.jpg" alt="img"></p><p>即把C更新成F，D更新成C，E更新成D，最后再插入E，是不是很没有效率？</p><p>所以我们需要使用key来给每个节点做一个唯一标识，Diff算法就可以正确的识别此节点，找到正确的位置区插入新的节点。</p><p><img src="https://pic1.zhimg.com/80/v2-ddb40a0343904dda17c258f1a33df204_720w.jpg" alt="img"></p><h2 id="_34、-nexttick用过吗-有什么作用" tabindex="-1">34、$nextTick用过吗，有什么作用？ <a class="header-anchor" href="#_34、-nexttick用过吗-有什么作用" aria-label="Permalink to &quot;34、$nextTick用过吗，有什么作用？&quot;">​</a></h2><p>在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。</p><p>解决的问题：<strong>有些时候在改变数据后立即要对dom进行操作</strong>，此时获取到的dom仍是获取到的是数据刷新前的dom，无法满足需要，这个时候就用到了$nextTick。</p><h2 id="_35、vue和react的区别是什么" tabindex="-1">35、vue和react的区别是什么？ <a class="header-anchor" href="#_35、vue和react的区别是什么" aria-label="Permalink to &quot;35、vue和react的区别是什么？&quot;">​</a></h2><p>① React严格上只针对MVC的view层,Vue则是MVVM模式</p><p>② virtual DOM不一样,vue会跟踪每一个组件的依赖关系,不需要重新渲染整个组件树.而对于React而言,每当应用的状态被改变时,全部组件都会重新渲染,所以react中会需要shouldComponentUpdate这个生命周期函数方法来进行控制</p><p>③ 组件写法不一样, React推荐的做法是 JSX + inline style, 也就是把HTML和CSS全都写进JavaScript了,即&#39;all in js&#39;; Vue推荐的做法是webpack+vue-loader的单文件组件格式,即html,css,jd写在同一个文件;</p><p>④ 数据绑定: vue实现了数据的双向绑定,react数据流动是单向的</p><p>⑤ state对象在react应用中不可变的,需要使用setState方法更新状态;在vue中,state对象不是必须的,数据由data属性在vue对象中管理</p>',26))])}]]);export{m as __pageData,g as default};
