import{_ as a,l as e,m as i,S as s}from"./chunks/framework.B9qehBrd.js";const n=JSON.parse('{"title":"vue2 迁移到 vue3 指南","description":"","frontmatter":{},"headers":[],"relativePath":"src/前端笔记/vue/vue2迁移到vue3记录.md","filePath":"src/前端笔记/vue/vue2迁移到vue3记录.md","lastUpdated":1702957875000}');const t=a({name:"src/前端笔记/vue/vue2迁移到vue3记录.md"},[["render",function(a,n,t,l,h,r){return i(),e("div",null,[...n[0]||(n[0]=[s('<h1 id="vue2-迁移到-vue3-指南" tabindex="-1">vue2 迁移到 vue3 指南 <a class="header-anchor" href="#vue2-迁移到-vue3-指南" aria-label="Permalink to &quot;vue2 迁移到 vue3 指南&quot;">​</a></h1><h3 id="将-vue2-项目支持到-pnpm-和-node-16" tabindex="-1">将 vue2 项目支持到 pnpm 和 node 16 <a class="header-anchor" href="#将-vue2-项目支持到-pnpm-和-node-16" aria-label="Permalink to &quot;将 vue2 项目支持到 pnpm 和 node 16&quot;">​</a></h3><h4 id="node-版本控制" tabindex="-1">node 版本控制 <a class="header-anchor" href="#node-版本控制" aria-label="Permalink to &quot;node 版本控制&quot;">​</a></h4><ol><li>在 node 16 使用 pnpm 安装项目依赖</li></ol><h3 id="将-webpack-迁移到-vite" tabindex="-1">将 webpack 迁移到 vite <a class="header-anchor" href="#将-webpack-迁移到-vite" aria-label="Permalink to &quot;将 webpack 迁移到 vite&quot;">​</a></h3><h4 id="版本控制" tabindex="-1">版本控制 <a class="header-anchor" href="#版本控制" aria-label="Permalink to &quot;版本控制&quot;">​</a></h4><ol><li>新建 migrate-to-vite 分支，基于此分支进行迁移</li></ol><h4 id="安装-vite" tabindex="-1">安装 Vite <a class="header-anchor" href="#安装-vite" aria-label="Permalink to &quot;安装 Vite&quot;">​</a></h4><p>在项目根目录中安装 Vite 及相关插件。</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vite</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @vitejs/plugin-vue</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>迁移过程记录需要更新的依赖，记录影响到的代码，以便后续回归测试。</p><h4 id="配置文件" tabindex="-1">配置文件 <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件&quot;">​</a></h4><p>创建 <a href="https://cn.vitejs.dev/" target="_blank" rel="noreferrer">Vite</a> 的配置文件 vite.config.js。你需要将原有 Webpack 配置中的相关部分转换为 Vite 配置，这可能包括别名（alias）、代理（proxy）等。</p><h4 id="更新-index-html" tabindex="-1">更新 index.html <a class="header-anchor" href="#更新-index-html" aria-label="Permalink to &quot;更新 index.html&quot;">​</a></h4><p>将原有的 Webpack 入口文件 index.html 中的内容移到项目根目录下的 index.html，并确保其结构适配 Vite。</p><h4 id="修改源码引用" tabindex="-1">修改源码引用 <a class="header-anchor" href="#修改源码引用" aria-label="Permalink to &quot;修改源码引用&quot;">​</a></h4><p>检查并修改源码中的资源引用，确保路径正确。由于 Vite 要求使用 ES 模块导入语法，你可能需要将 CommonJS 模块导入语法（如 require）更改为 import。</p><h4 id="更新脚本命令" tabindex="-1">更新脚本命令 <a class="header-anchor" href="#更新脚本命令" aria-label="Permalink to &quot;更新脚本命令&quot;">​</a></h4><p>在 package.json 里更新 scripts 部分，替换原有的 Webpack 构建和开发命令为 Vite 命令。</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vite&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vite build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;serve&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vite preview&quot;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试&quot;">​</a></h4><p>运行 Vite 的开发服务器，检查应用是否正常工作。</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="逐步移除webpack" tabindex="-1">逐步移除Webpack <a class="header-anchor" href="#逐步移除webpack" aria-label="Permalink to &quot;逐步移除Webpack&quot;">​</a></h4><p>如果一切正常，你可以开始逐步移除Webpack相关的配置、插件和依赖。</p><h4 id="回归测试" tabindex="-1">回归测试 <a class="header-anchor" href="#回归测试" aria-label="Permalink to &quot;回归测试&quot;">​</a></h4><p>在迁移完成后，进行全面的回归测试以确保应用的每个部分都能正常工作。</p><h4 id="注意事项" tabindex="-1">注意事项： <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项：&quot;">​</a></h4><p>某些基于Webpack特有功能的代码可能需要重写。 可能需要查找并使用Vite对应的插件来替换Webpack插件。 环境变量前缀将从VUE_APP_更改为VITE_。 务必在更改后进行充分测试。 vite 不支持省略 .vue 文件扩展名，因此需要在引用时添加扩展名。</p>',29)])])}]]);export{n as __pageData,t as default};
