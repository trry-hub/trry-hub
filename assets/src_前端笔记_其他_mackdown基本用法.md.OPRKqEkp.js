import{_ as t,l as a,m as e,S as n}from"./chunks/framework.B9qehBrd.js";const s=JSON.parse('{"title":"mackdown 基本语法","description":"","frontmatter":{},"headers":[],"relativePath":"src/前端笔记/其他/mackdown基本用法.md","filePath":"src/前端笔记/其他/mackdown基本用法.md","lastUpdated":1683796624000}');const p=t({name:"src/前端笔记/其他/mackdown基本用法.md"},[["render",function(t,s,p,l,i,o){return e(),a("div",null,[...s[0]||(s[0]=[n('<h1 id="mackdown-基本语法" tabindex="-1">mackdown 基本语法 <a class="header-anchor" href="#mackdown-基本语法" aria-label="Permalink to &quot;mackdown 基本语法&quot;">​</a></h1><p>Markdown 是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p><p>相比 WYSIWYG 编辑器</p><p>优点： 1、因为是纯文本，所以只要支持 Markdown 的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。 2、操作简单。比如:WYSIWYG 编辑时标记个标题，先选中内容，再点击导航栏的标题按钮，选择几级标题。要三个步骤。而 Markdown 只需要在标题内容前加#即可</p><p>缺点： 1、需要记一些语法（当然，是很简单。五分钟学会）。 2、有些平台不支持 Markdown 编辑模式。</p><p>还好，简书是支持 Markdown 编辑模式的。</p><p>开启方式：设置-&gt;默认编辑器-&gt;Markdown 编辑器 一、标题 在想要设置为标题的文字前面加#来表示 一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。</p><p>注：标准语法一般在#后跟个空格再写文字，貌似简书不加空格也行。</p><p>示例：</p><h1 id="这是一级标题" tabindex="-1">这是一级标题 <a class="header-anchor" href="#这是一级标题" aria-label="Permalink to &quot;这是一级标题&quot;">​</a></h1><h2 id="这是二级标题" tabindex="-1">这是二级标题 <a class="header-anchor" href="#这是二级标题" aria-label="Permalink to &quot;这是二级标题&quot;">​</a></h2><h3 id="这是三级标题" tabindex="-1">这是三级标题 <a class="header-anchor" href="#这是三级标题" aria-label="Permalink to &quot;这是三级标题&quot;">​</a></h3><h4 id="这是四级标题" tabindex="-1">这是四级标题 <a class="header-anchor" href="#这是四级标题" aria-label="Permalink to &quot;这是四级标题&quot;">​</a></h4><h5 id="这是五级标题" tabindex="-1">这是五级标题 <a class="header-anchor" href="#这是五级标题" aria-label="Permalink to &quot;这是五级标题&quot;">​</a></h5><h6 id="这是六级标题" tabindex="-1">这是六级标题 <a class="header-anchor" href="#这是六级标题" aria-label="Permalink to &quot;这是六级标题&quot;">​</a></h6><p>效果如下：</p><p>这是一级标题 这是二级标题 这是三级标题 这是四级标题 这是五级标题 这是六级标题 二、字体 加粗 要加粗的文字左右分别用两个*号包起来</p><p>斜体 要倾斜的文字左右分别用一个*号包起来</p><p>斜体加粗 要倾斜和加粗的文字左右分别用三个*号包起来</p><p>删除线 要加删除线的文字左右分别用两个~~号包起来</p><p>示例：</p><p><strong>这是加粗的文字</strong><em>这是倾斜的文字</em>` <strong><em>这是斜体加粗的文字</em></strong><s>这是加删除线的文字</s> 效果如下：</p><p>这是加粗的文字 这是倾斜的文字 这是斜体加粗的文字 这是加删除线的文字</p><p>三、引用 在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt; n 个... 貌似可以一直加下去，但没神马卵用</p><p>示例：</p><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>这是引用的内容 效果如下：</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><p>这是引用的内容</p><p>这是引用的内容</p><p>这是引用的内容</p><p>四、分割线 三个或者三个以上的 - 或者 * 都可以。</p><p>示例：</p><hr><hr><hr><hr><p>效果如下： 可以看到，显示效果是一样的。</p><p>五、图片 语法：</p><p>图片 alt 就是显示在图片下面的文字，相当于对图片内容的解释。 图片 title 是图片的标题，当鼠标移到图片上时显示的内容。title 可加可不加 示例：</p><p><img src="https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/" alt="blockchain"> 效果如下：</p><p>blockchain 上传本地图片直接点击导航栏的图片标志，选择图片即可</p><p>markdown 格式追求的是简单、多平台统一。那么图片的存储就是一个问题，需要用图床，提供统一的外链，这样就不用在不同的平台去处理图片的问题了。才能做到书写一次，各处使用。 关于图床的选择我写了一篇文章，对网上存在的各种方法做了总结，需要的朋友可以看看。markdown 图床</p><p>六、超链接 语法：</p><p><code>[超链接名](超链接地址 &quot;超链接title&quot;)</code> title 可加可不加 示例：</p><p><a href="http://jianshu.com" target="_blank" rel="noreferrer">简书</a><a href="http://baidu.com" target="_blank" rel="noreferrer">百度</a> 效果如下：</p><p>简书 百度</p><p>注：Markdown 本身语法不支持链接在新页面中打开，貌似简书做了处理，是可以的。别的平台可能就不行了，如果想要在新页面中打开的话可以用 html 语言的 a 标签代替。</p><p><code>&lt;a href=&quot;超链接地址&quot; target=&quot;_blank&quot;&gt;超链接名&lt;/a&gt;</code></p><p>示例 <code>&lt;a href=&quot;https://www.jianshu.com/u/1f5ac0cf6a8b&quot; target=&quot;_blank&quot;&gt;简书&lt;/a&gt;</code></p><p>七、列表 无序列表 语法： 无序列表用 - + * 任何一种都可以</p><ul><li><p>列表内容</p></li><li><p>列表内容</p></li><li><p>列表内容</p></li></ul><p>注意：- + * 跟内容之间都要有一个空格</p><p>效果如下：</p><p>列表内容 列表内容 列表内容 有序列表 语法： 数字加点</p><ol><li>列表内容</li><li>列表内容</li><li>列表内容</li></ol><p>注意：序号跟内容之间要有空格 效果如下：</p><p>列表内容 列表内容 列表内容 列表嵌套 上一级和下一级之间敲三个空格即可</p><p>一级无序列表内容</p><p>二级无序列表内容 二级无序列表内容 二级无序列表内容 一级无序列表内容</p><p>二级有序列表内容 二级有序列表内容 二级有序列表内容 一级有序列表内容</p><p>二级无序列表内容 二级无序列表内容 二级无序列表内容 一级有序列表内容</p><p>二级有序列表内容 二级有序列表内容 二级有序列表内容 八、表格 语法：</p><table tabindex="0"><thead><tr><th>表头</th><th style="text-align:center;">表头</th><th style="text-align:right;">表头</th></tr></thead><tbody><tr><td>内容</td><td style="text-align:center;">内容</td><td style="text-align:right;">内容</td></tr><tr><td>内容</td><td style="text-align:center;">内容</td><td style="text-align:right;">内容</td></tr></tbody></table><p>第二行分割表头和内容。</p><ul><li>有一个就行，为了对齐，多加了几个 文字默认居左 -两边加：表示文字居中 -右边加：表示文字居右 注：原生的语法两边都要用 | 包起来。此处省略 示例：</li></ul><table tabindex="0"><thead><tr><th>姓名</th><th style="text-align:center;">技能</th><th style="text-align:right;">排行</th></tr></thead><tbody><tr><td>刘备</td><td style="text-align:center;">哭</td><td style="text-align:right;">大哥</td></tr><tr><td>关羽</td><td style="text-align:center;">打</td><td style="text-align:right;">二哥</td></tr><tr><td>张飞</td><td style="text-align:center;">骂</td><td style="text-align:right;">三弟</td></tr></tbody></table><p>效果如下：</p><p>姓名 技能 排行 刘备 哭 大哥 关羽 打 二哥 张飞 骂 三弟 九、代码 语法： 单行代码：代码之间分别用一个反引号包起来</p><pre><code>`代码内容`\n</code></pre><p>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p><p>(<code>) 代码... 代码... 代码... (</code>) 注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。</p><p>示例：</p><p>单行代码</p><p><code>create database hero;</code> 代码块</p><p>(<code>) function fun(){ echo &quot;这是一句非常牛逼的代码&quot;; } fun(); (</code>) 效果如下：</p><p>单行代码</p><p>create database hero;</p><p>代码块</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fun</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    echo </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;这是一句非常牛逼的代码&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fun</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>十、流程图</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>st=&gt;start: 开始</span></span>\n<span class="line"><span>op=&gt;operation: My Operation</span></span>\n<span class="line"><span>cond=&gt;condition: Yes or No?</span></span>\n<span class="line"><span>e=&gt;end</span></span>\n<span class="line"><span>st-&gt;op-&gt;cond</span></span>\n<span class="line"><span>cond(yes)-&gt;e</span></span>\n<span class="line"><span>cond(no)-&gt;op</span></span>\n<span class="line"><span>&amp;```</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',80)])])}]]);export{s as __pageData,p as default};
