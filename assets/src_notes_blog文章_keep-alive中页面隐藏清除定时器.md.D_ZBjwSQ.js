import{_ as s,l as a,m as n,S as e}from"./chunks/framework.B9qehBrd.js";const p=JSON.parse('{"title":"vue项目中清除定时器（清除定时器不成功）","description":"","frontmatter":{},"headers":[],"relativePath":"src/notes/blog文章/keep-alive中页面隐藏清除定时器.md","filePath":"src/notes/blog文章/keep-alive中页面隐藏清除定时器.md","lastUpdated":1683717698000}');const l=s({name:"src/notes/blog文章/keep-alive中页面隐藏清除定时器.md"},[["render",function(s,p,l,i,t,r){return n(),a("div",null,[...p[0]||(p[0]=[e('<h1 id="vue项目中清除定时器-清除定时器不成功" tabindex="-1">vue项目中清除定时器（清除定时器不成功） <a class="header-anchor" href="#vue项目中清除定时器-清除定时器不成功" aria-label="Permalink to &quot;vue项目中清除定时器（清除定时器不成功）&quot;">​</a></h1><p><strong>首先确认&lt; router-view &gt;外层是否有包裹了一层&lt; keep-alive &gt;</strong></p><h2 id="如果有包裹" tabindex="-1">如果有包裹： <a class="header-anchor" href="#如果有包裹" aria-label="Permalink to &quot;如果有包裹：&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;template&gt;</span></span>\n<span class="line"><span>  &lt;div&gt;</span></span>\n<span class="line"><span>    &lt;keep-alive&gt;</span></span>\n<span class="line"><span>      &lt;router-view /&gt;</span></span>\n<span class="line"><span>    &lt;/keep-alive&gt;</span></span>\n<span class="line"><span>  &lt;/div&gt;</span></span>\n<span class="line"><span>&lt;/template&gt;</span></span>\n<span class="line"><span>1234567</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>在data中：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>data () {</span></span>\n<span class="line"><span>    return {</span></span>\n<span class="line"><span>      timer: null // 定时器</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>  },</span></span>\n<span class="line"><span>12345</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>在activated中设置定时器：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>activated () {</span></span>\n<span class="line"><span>    this.timer = setInterval(() =&gt; {</span></span>\n<span class="line"><span>      //  定时器中执行的代码</span></span>\n<span class="line"><span>    }, 30000)</span></span>\n<span class="line"><span>  },</span></span>\n<span class="line"><span>12345</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>在deactivated中清除定时器：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>deactivated () {</span></span>\n<span class="line"><span>    // 页面关闭（路由跳转）时清除定时器</span></span>\n<span class="line"><span>    clearInterval(this.timer)</span></span>\n<span class="line"><span>    this.timer = null</span></span>\n<span class="line"><span>  },</span></span>\n<span class="line"><span>12345</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>&lt; keep-alive &gt;作用： &lt; keep-alive &gt; 可以使被包含的组件状态维持不变，即便是组件切换了，其内的状态依旧维持在内存之中。在下一次显示时，也不会重现渲染（有缓存的作用）。</p><p><strong>被包含在 &lt; keep-alive &gt; 中创建的组件，会多出两个生命周期的钩子: activated 与 deactivated</strong></p><p>activated 在组件被激活时调用，在组件第一次渲染时也会被调用，之后每次keep-alive激活时被调用。</p><p>deactivated 在组件被停用时调用。</p><blockquote><p>注意：只有组件被 keep-alive 包裹时，这两个生命周期才会被调用，如果作为正常组件使用，是不会被调用，以及在 2.1.0 版本之后，使用 exclude 排除之后，就算被包裹在 keep-alive中，这两个钩子依然不会被调用！另外在服务端渲染时此钩子也不会被调用的。</p></blockquote><h2 id="如果没有包裹" tabindex="-1">如果没有包裹 <a class="header-anchor" href="#如果没有包裹" aria-label="Permalink to &quot;如果没有包裹&quot;">​</a></h2><p>在data中：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>data () {</span></span>\n<span class="line"><span>    return {</span></span>\n<span class="line"><span>      timer: null // 定时器</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>  },</span></span>\n<span class="line"><span>12345</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>在mounted中设置定时器：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mounted() {</span></span>\n<span class="line"><span>    this.timer = setInterval(() =&gt; {</span></span>\n<span class="line"><span>      //  定时器中执行的代码</span></span>\n<span class="line"><span>    }, 30000)</span></span>\n<span class="line"><span>  },</span></span>\n<span class="line"><span>12345</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>在beforeDestroy中清除定时器：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>beforeDestroy() {</span></span>\n<span class="line"><span>    // 页面关闭（路由跳转）时清除定时器</span></span>\n<span class="line"><span>    clearInterval(this.timer)</span></span>\n<span class="line"><span>    this.timer = null</span></span>\n<span class="line"><span>  },</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',22)])])}]]);export{p as __pageData,l as default};
