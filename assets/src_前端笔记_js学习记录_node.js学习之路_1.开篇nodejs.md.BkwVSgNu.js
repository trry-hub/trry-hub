import{_ as e,l as s,m as a,S as o}from"./chunks/framework.B9qehBrd.js";const n=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"src/前端笔记/js学习记录/node.js学习之路/1.开篇nodejs.md","filePath":"src/前端笔记/js学习记录/node.js学习之路/1.开篇nodejs.md","lastUpdated":1683717698000}');const d=e({name:"src/前端笔记/js学习记录/node.js学习之路/1.开篇nodejs.md"},[["render",function(e,n,d,i,l,r){return a(),s("div",null,[...n[0]||(n[0]=[o('<h2 id="node-js-简介" tabindex="-1">node.js 简介 <a class="header-anchor" href="#node-js-简介" aria-label="Permalink to &quot;node.js 简介&quot;">​</a></h2><p>1.node.js 是一个开源与跨平台的 javaScript 运行时环境。它是一个可用于几乎任何项目的流行工具！</p><p>2.node.js 再浏览器外运行 V8 javaScript 引擎</p><p>3.node.js 可以再一台服务器上处理千个并发链接，而无需引入管理线程并发的负担（这可能是中大的bug的来源）</p><h2 id="安装node-js" tabindex="-1">安装node.js <a class="header-anchor" href="#安装node-js" aria-label="Permalink to &quot;安装node.js&quot;">​</a></h2><blockquote><p>node.js 可以通过多种方式进行安装。</p></blockquote><ol><li><p>安装node.js 的其中一种非常方便快捷的方式是通过软件包管理。对于这种情况，每种操作系统都有其自身的软件包安装器。 <a href="http://nodejs.cn/download/" target="_blank" rel="noreferrer">链接</a></p></li><li><p>在macOS上，Homeebrew是业界的标准，在安装之后可以非常轻松地安装 node.js (通过在CLI中运行以下命令)：</p></li></ol><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="3"><li><p>其它使用与Linux和Windows的软件包管理器列出在<a href="https://nodejs.org/en/download/package-manager/" target="_blank" rel="noreferrer">https://nodejs.org/en/download/package-manager/</a></p></li><li><p>nvm 是一种流行的运行node.js的方式。例如，它可以轻松地切换node.js版本，也可以安装新版本用以尝试并且当出现问题时轻松的回滚。</p></li></ol><blockquote><p>建议，如果刚入门并且还没有用过Homebrew，则使用官方的安装程序，否则Homebrew是更好的解决方案。</p></blockquote><ul><li>安装 node.js 之后，就可以在命令行中访问node可执行程序了。</li></ul><h2 id="node-js-与浏览器的区别" tabindex="-1">node.js 与浏览器的区别 <a class="header-anchor" href="#node-js-与浏览器的区别" aria-label="Permalink to &quot;node.js 与浏览器的区别&quot;">​</a></h2><ul><li>不同之处</li></ul><blockquote><p>浏览器和node.js均使用javaScript作为其编译语言。但构建运行于浏览器中的应用程序与构建node.js应用程序完全不同。</p></blockquote><p>广泛使用javaScript 的前端开发这的角度来看，node.js应用程序具有据大的优势：使用单一语言轻松编程所有一切（前端和后端）。</p><ul><li><p>不同的还有生态系统。在浏览器中，大多数时候做的是与DOM或其他Web平台API（例如Cookies）进行交互。当然，那些在Node.js中是不存在的。没有浏览器提供的document、window、以及所有其他的对象</p></li><li><p>另一个很大的不同是，在node.js中，可以控制运行环境。除非构建的是任何人都可以在任何地方部署的开源应用程序，否则你能知道会在那个版本的node.js上运行该应用程序。与浏览器环境（你无法选择访客会使用的浏览器）相比起来，这非常方便。</p></li><li><p>另一个区别是node.js使用CommonJS模块系统，而在浏览器中，则海正在实现ES模块标准。在时间中，这意味着在node.js中使用require(),而在浏览器中则使用import</p></li></ul>',16)])])}]]);export{n as __pageData,d as default};
