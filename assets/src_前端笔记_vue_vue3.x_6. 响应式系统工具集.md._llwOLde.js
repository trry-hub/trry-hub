import{_ as s,l as a,m as i,S as e}from"./chunks/framework.B9qehBrd.js";const n=JSON.parse('{"title":"响应式系统工具","description":"","frontmatter":{},"headers":[],"relativePath":"src/前端笔记/vue/vue3.x/6. 响应式系统工具集.md","filePath":"src/前端笔记/vue/vue3.x/6. 响应式系统工具集.md","lastUpdated":1683717698000}');const t=s({name:"src/前端笔记/vue/vue3.x/6. 响应式系统工具集.md"},[["render",function(s,n,t,l,h,r){return i(),a("div",null,[...n[0]||(n[0]=[e('<h1 id="响应式系统工具" tabindex="-1">响应式系统工具 <a class="header-anchor" href="#响应式系统工具" aria-label="Permalink to &quot;响应式系统工具&quot;">​</a></h1><h3 id="unref" tabindex="-1"><code>unref</code> <a class="header-anchor" href="#unref" aria-label="Permalink to &quot;`unref`&quot;">​</a></h3><p>如果参数是一个 ref 则返回它的 <code>value</code> , 否则返回参数本身，它是 <code>val = isRef(val) ? val.value : val</code> 的语法糖。</p><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useFoo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;) {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> unwrapped</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> unref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// unwrapped 一定是 number 类型</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="toref" tabindex="-1"><code>toRef</code> <a class="header-anchor" href="#toref" aria-label="Permalink to &quot;`toRef`&quot;">​</a></h3>',5)])])}]]);export{n as __pageData,t as default};
