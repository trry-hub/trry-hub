import{_ as t,L as e,l as a,m as o,S as p,x as l,y as i,p as r,Q as s}from"./chunks/framework.B9qehBrd.js";const E=JSON.parse('{"title":"SELECT * FROM t_detail;","description":"","frontmatter":{},"headers":[],"relativePath":"src/notes/mysql/sql基本查询语句.md","filePath":"src/notes/mysql/sql基本查询语句.md","lastUpdated":1683717698000}'),d={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"16.29ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 7200 950","aria-hidden":"true"};const n=t({name:"src/notes/mysql/sql基本查询语句.md"},[["render",function(t,E,n,c,u,_){const S=e("mjx-assistive-mml"),T=e("mjx-container");return o(),a("div",null,[E[7]||(E[7]=p('<p>USE <code>database_jiuzhou_1.0.0</code>;</p><h1 id="select-from-t-detail" tabindex="-1">SELECT * FROM <code>t_detail</code>; <a class="header-anchor" href="#select-from-t-detail" aria-label="Permalink to &quot;SELECT * FROM `t_detail`;&quot;">​</a></h1><p>SELECT <code>title</code>,price FROM <code>t_detail</code>;</p><h1 id="查询常量值" tabindex="-1">查询常量值 <a class="header-anchor" href="#查询常量值" aria-label="Permalink to &quot;查询常量值&quot;">​</a></h1><p>SELECT 100; SELECT &#39;JOHN&#39;;</p><h1 id="_5-查询表达式" tabindex="-1">5.查询表达式 <a class="header-anchor" href="#_5-查询表达式" aria-label="Permalink to &quot;5.查询表达式&quot;">​</a></h1><p>SELECT 100%98;</p><h1 id="_6-查询函数" tabindex="-1">6.查询函数 <a class="header-anchor" href="#_6-查询函数" aria-label="Permalink to &quot;6.查询函数&quot;">​</a></h1><p>SELECT VERSION();</p><h1 id="_7-起别名" tabindex="-1">7.起别名 <a class="header-anchor" href="#_7-起别名" aria-label="Permalink to &quot;7.起别名&quot;">​</a></h1><p>#方式一 SELECT 100%98 AS 结果;</p><p>#方式二 SELECT title 标题, price 价格 FROM t_detail;</p><p>#案例： 查询price，显示结果为 out put</p><p>SELECT price AS &quot;out put&quot; FROM t_detail;</p><h1 id="_8-去重" tabindex="-1">8. 去重 <a class="header-anchor" href="#_8-去重" aria-label="Permalink to &quot;8. 去重&quot;">​</a></h1><p>#案例：查询商品价格</p><p>SELECT DISTINCT price FROM t_detail;</p><h1 id="_9-号的作用" tabindex="-1">9. +号的作用 <a class="header-anchor" href="#_9-号的作用" aria-label="Permalink to &quot;9. +号的作用&quot;">​</a></h1><h1 id="案例-标题和价格合成一个字段" tabindex="-1">案例： 标题和价格合成一个字段 <a class="header-anchor" href="#案例-标题和价格合成一个字段" aria-label="Permalink to &quot;案例： 标题和价格合成一个字段&quot;">​</a></h1><p>/* mysql 中 + 号： 仅仅只有一个功能： 运算符 select 100+90; 两个操作都为数值型，则做加法运算 select &#39;123&#39;+90; 其中一方为字符型，试图将字符型数值转换成数值型 如果转换成功，则继续做加法晕眩 如果转换失败，则将字符型数值转换成0</p><pre><code>select null+10; 只要其中乙方为null，则结果肯定为null\n</code></pre><p>*/</p><h1 id="select-title-price-as-姓名-from-t-detail" tabindex="-1">SELECT title+price AS 姓名 FROM t_detail; <a class="header-anchor" href="#select-title-price-as-姓名-from-t-detail" aria-label="Permalink to &quot;SELECT title+price AS 姓名 FROM t_detail;&quot;">​</a></h1><p>SELECT CONCAT(title,price) AS 姓名 FROM t_detail;</p><h2 id="use-t-goods" tabindex="-1">-- USE t_goods; <a class="header-anchor" href="#use-t-goods" aria-label="Permalink to &quot;-- USE t_goods;&quot;">​</a></h2><h1 id="进阶2-条件查询" tabindex="-1">进阶2： 条件查询 <a class="header-anchor" href="#进阶2-条件查询" aria-label="Permalink to &quot;进阶2： 条件查询&quot;">​</a></h1><p>/* 语法： select 查询列表 from 表名 where 筛选条件;</p><p>分类：</p><pre><code>\t\t\t一、按条件表达式筛选\n\t\t\t\n\t\t\t条件运算符： &gt; &lt; = != &lt;&gt; &lt;= &gt;=\n</code></pre><p>​ 二、按逻辑表达式筛选 逻辑运算符： &amp;&amp; || ! and or not</p><pre><code>\t\t\t&amp;&amp;和and: 两个条件都为true，结果为true，反之为false\n\t\t\t||或or:  只要又一个条件为true,结果为true，反之为false\n\t\t\t!或not：如果链接的条件本身为false,结果为true，反之为false\n\t\t\t\t\t\t\t\n\t\t\t三、模糊查询\n\t\t\t\t\t\t\n\t\t\t\t\t\tlike\n\t\t\t\t\t\tbetween and\n\t\t\t\t\t\tin\n\t\t\t\t\t\tis null\n</code></pre><p><em>/#一、按条件表达式筛选 #案例1: 查询id在大于50小于100的商品 SELECT * FROM t_goods WHERE id &gt; 50 &amp;&amp; id &lt; 840; #案例2：查询type_id等于2的所有商品的价格和商品名称 SELECT goods_title, goods_price FROM t_goods WHERE type_id = 2; USE t_detail; #二、按逻辑表达式筛选 #案例1：查询价格在900到1000之间的商品 SELECT * FROM t_detail WHERE id &gt; 10 AND id &lt; 500;#三、模糊查询 /</em></p><p>like 特点： 1. 一般和通配符搭配使用 通配符： % 任意多个字符，包含0个字符 _ 任意单个字符 bewteen and in is null is not null</p>',33)),l("p",null,[l("em",null,[E[2]||(E[2]=i("/#1.like #案例1：查询商品名中包含字符a的商品信息 SELECT * FROM t_goods WHERE goods_title LIKE '%冷鲜%';#案例2：查询商品名中第二个字符为利第五个字符为冠的商品名称和价格 SELECT goods_price, goods_title FROM t_goods WHERE goods_title LIKE '",-1)),E[3]||(E[3]=l("em",null,"利__冠%';#案例3：查询商品名中第二个字符为_的商品名 SELECT goods_title FROM t_goods WHERE goods_title LIKE '",-1)),E[4]||(E[4]=i("_%';#------------------------------ #推荐 SELECT goods_title FROM t_goods WHERE goods_title LIKE '_",-1)),r(T,{class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},{default:s(()=>[(o(),a("svg",d,[...E[0]||(E[0]=[l("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[l("g",{"data-mml-node":"math"},[l("g",{"data-mml-node":"merror","data-mjx-error":"Missing superscript or subscript argument",title:"Missing superscript or subscript argument"},[l("rect",{"data-background":"true",width:"7200",height:"950",y:"-200",style:{fill:"yellow",stroke:"none"}}),l("title",null,"Missing superscript or subscript argument"),l("g",{"data-mml-node":"mtext",style:{fill:"red",stroke:"red","font-family":"serif"}},[l("text",{"data-variant":"-explicitFont",transform:"scale(1,-1)","font-size":"884px"},"_%' ESCAPE '")])])])],-1)])])),r(S,{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},{default:s(()=>[...E[1]||(E[1]=[l("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[l("merror",{"data-mjx-error":"Missing superscript or subscript argument",title:"Missing superscript or subscript argument"},[l("mtext",null,"_%' ESCAPE '")])],-1)])]),_:1})]),_:1}),E[5]||(E[5]=i("';#2.between and /",-1))]),E[6]||(E[6]=i(" 1.使用between and 可以提高语句的简介度 2.包含临界值 3.两个临界值不要调换顺序",-1))]),E[8]||(E[8]=p('<p><em>/#案例1：查询商品id在800到920之间的员工信息 SELECT * FROM t_goods WHERE id &gt;= 800 AND id &lt;= 920;#-------------------------------- SELECT * FROM t_goods WHERE id BETWEEN 800 AND 920;#3.in /</em></p><p>含义： 判断某个字段的值是否属于in列表中的某一项 特点： 1.使用in提高语句简洁度 2.in列表的值类型必须一致或兼容 <em>/#案例：查询商品名称是 惠氏S-26金装爱儿乐婴儿配方奶粉1段400g、圣元优博盖诺安婴儿配方奶粉1段900g中的一个商品名的商品 SELECT * FROM t_goods WHERE goods_title IN ( &#39;惠氏S-26金装爱儿乐婴儿配方奶粉1段400g&#39;, &#39;圣元优博盖诺安婴儿配方奶粉1段900g&#39; ) #4.is null /</em></p><p>=或&lt;&gt;不能用于判断null值 is null或is not null 可以判断null值</p><p><em>/#案例：查询没有价格的商品 SELECT * FROM t_goods WHERE goods_price IS NULL;#安全等于： &lt;=&gt; #案例1.查询没有价格的商品 SELECT * FROM t_goods WHERE goods_price &lt;=&gt; NULL;#案例2.查询id为900的商品信息 SELECT * FROM t_goods WHERE Id &lt;=&gt; 900;# is null pk &lt;=&gt; /</em></p><p>IS NULL: 仅仅可以判断null值，可读性较高，建议使用 &lt;=&gt;:既可以判断null值，又可以判断普通的数值，可读性较低 */</p><p>#查看表结构 DESC t_goods;</p><p>#进阶3：排序查询</p><p>/* 语法： select 查询列表 from 表 【where 筛选条件】 order by 排序列表 【ase|desc】</p><p>特点： 1.asc代表的是升序，desc代表的是降序 如果不写，默认是升序</p><pre><code>\t\t2.order by子句中可以支持单个字段、多个字段、表达式、函数、别名\n\t\t3.order by子句一般是放在查询语句的最后面，limit子句除外\n</code></pre><p>*/</p><p>#案例：查询商品信息，要求id从大到小排序</p><p>SELECT * FROM t_goods ORDER BY id DESC; SELECT * FROM t_goods ORDER BY id ASC;</p><p>#案例：按商品名称的长度排序【按函数排序】</p><p>SELECT id,goods_title,LENGTH(goods_title) 长度 FROM t_goods ORDER BY 长度 DESC;</p><p>#案例：查询商品信息，要求先按商品名称长度升序排序，在按id降序排序</p><p>SELECT id,goods_title, LENGTH(goods_title) AS 商品名称长度 FROM t_goods ORDER BY LENGTH(goods_title) ASC, id desc;</p><p>SELECT * FROM t_goods LIMIT 5,10;</p><p>#进阶4：常见函数</p><p>/*</p><p>概念：类似于java的方法，将一组逻辑语句封装在方法体中，对外暴露方法名 好处：1、隐藏了实现细节 2、提高代码的重用性 调用：select 函数名(实参列表) 【from 表】; 特点：</p><pre><code>\t\t1.叫什么（函数名）\n\t\t2.干什么（函数功能）\n</code></pre><p>分类： 1、单行函数 如 concat 、length、ifnull等 2、分组函数</p><pre><code>\t\t功能：做统计使用，又称为统计函数、聚合函数、组函数\n</code></pre><p>*/</p><h1 id="一、字符函数" tabindex="-1">一、字符函数 <a class="header-anchor" href="#一、字符函数" aria-label="Permalink to &quot;一、字符函数&quot;">​</a></h1><p>#length 获取参数数值的字节个数 SELECT LENGTH(&#39;john&#39;);</p><p>SELECT LENGTH(&#39;张三丰hahaha&#39;);</p><p>SHOW VARIABLES LIKE &#39;%char%&#39;;</p><p>#2.concat 拼接字符串</p><p>SELECT CONCAT(goods_title,&#39;_&#39;,goods_price) AS title FROM t_goods;</p><p>#3.upper、lower</p><p>SELECT UPPER(&#39;price&#39;); SELECT LOWER(&#39;PRICE&#39;);</p><p>#示例 将商品名称大写，价格小写，然后拼接 SELECT CONCAT(UPPER(goods_title),&#39;_&#39;,LOWER(goods_price)) 姓名 FROM t_goods;</p><p>#4.substr、substring 注意：索引从1开始</p><h1 id="截取从指定索引出后面的所有字符" tabindex="-1">截取从指定索引出后面的所有字符 <a class="header-anchor" href="#截取从指定索引出后面的所有字符" aria-label="Permalink to &quot;截取从指定索引出后面的所有字符&quot;">​</a></h1><p>SELECT SUBSTR(&#39;李莫愁爱上了陆展元&#39;,7) out_put;</p><p>#截取从指定索引处指定字符长度的字符 SELECT SUBSTR(&#39;李莫愁爱上了陆展元&#39;,1,3) out_put;</p><p>#5.instr 返回子串第一次出现的索引，如果找不到返回0</p><p>SELECT INSTR(&#39;杨不爱上了殷六侠&#39;,&#39;殷六侠&#39;) AS out_put;</p><p>#6.trim</p><p>SELECT LENGTH(TRIM(&#39; 张翠山 &#39;)) AS out_put;</p><p>SELECT TRIM(&#39;a&#39; FROM &#39;aaaaaaaaaaaaaaa张翠山aaaaaaaaaaaaaa&#39;) AS out_put;</p><p>#7.lpad 用指定的字符实现左填充指定长度</p><p>SELECT LPAD(&#39;殷素素&#39;,10,&#39;*&#39;) AS oup_put;</p><p>#8.rpad 用指定的字符实现右填充指定长度</p><p>SELECT RPAD(&#39;殷素素&#39;,12,&#39;12&#39;) AS oup_put;</p><p>#9.replace 替换</p><p>SELECT REPLACE(&#39;周芷若周芷若周芷若周芷若周芷若周芷若爱上了张无忌&#39;,&#39;周芷若&#39;,&#39;赵敏&#39;) AS out_put;</p><p>#二、数学函数</p><p>#round 四舍五入</p><p>SELECT ROUND(-1.55);</p><p>SELECT ROUND(1.55,1);</p><p>#ceil 向上取整，返回&gt;=该参数的最小整数</p><p>SELECT CEIL(-1.02);</p><p>#floor 向下取整，返回&lt;=该参数的最大整数 SELECT FLOOR(-9.99);</p><p>#truncate 截断</p><p>SELECT TRUNCATE(1.69999,1);</p><p>#mod取余</p><p>/*</p><pre><code>mod(a,b) : a-a/b*b\n\nmod(-10,-3):-10- (-10)/(-3)*(-3) =-1\n</code></pre><p>*/</p><p>SELECT MOD(-10,-3);</p><p>SELECT 10%3;</p><p>#三、日期函数</p><p>#now 返回当前系统日期+时间</p><p>SELECT NOW();</p><p>#curdate 返回当前系统日期，不包含时间 SELECT CURDATE();</p><p>#curtime 返回当前时间，不包含日期 SELECT CURTIME();</p><p>#可以获取指定的部分，年、月、日、小时、分钟、秒 SELECT YEAR(NOW()) 年; SELECT YEAR(&#39;1998-1-1&#39;) 年;</p><p>SELECT MONTH(&#39;1998-1-1&#39;) 月; SELECT MONTHNAME(NOW()) 月;</p><p>#str_to_date 将字符通过指定的格式转换成日期</p><p>SELECT STR_TO_DATE(&#39;1998-3-2&#39;,&#39;%Y-%c-%d&#39;) AS out_put;</p><p>#查询入职日期为1992-4-3的员工信息 SELECT * FROM t_goods WHERE goods_id = &#39;1992-4-3&#39;;</p><p>SELECT * FROM t_goods WHERE goods_id = STR_TO_DATE(&#39;4-3 1992&#39;,&#39;%c-%d %Y&#39;);</p><p>#date_format 将日期转换成字符</p><p>SELECT DATE_FORMAT(NOW(),&#39;%Y年%m月%d日&#39;) AS out_put;</p><p>#查询有奖金的员工名和入职日期(xx月/xx日 xx年)</p><p>SELECT DATE_FORMAT(NOW(),&#39;%m月/%d日 %y年&#39;) 入职日期;</p><p>#四、其他函数</p><p>SELECT VERSION(); SELECT DATABASE(); SELECT USER();</p><h1 id="五、流程控制函数" tabindex="-1">五、流程控制函数 <a class="header-anchor" href="#五、流程控制函数" aria-label="Permalink to &quot;五、流程控制函数&quot;">​</a></h1><p>#if函数： if esle 的效果</p><p>SELECT IF(10&gt;5,&#39;大&#39;,&#39;小&#39;);</p><h1 id="视频50集" tabindex="-1">#### 视频50集 <a class="header-anchor" href="#视频50集" aria-label="Permalink to &quot;#### 视频50集&quot;">​</a></h1>',85))])}]]);export{E as __pageData,n as default};
